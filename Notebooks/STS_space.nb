(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    543365,      10475]
NotebookOptionsPosition[    534674,      10330]
NotebookOutlinePosition[    535261,      10349]
CellTagsIndexPosition[    535218,      10346]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Aqui", ",", " ", 
    RowBox[{
    "vamos", " ", "conduzir", " ", "a", " ", "evolu\[CCedilla]\[ATilde]o", 
     " ", "do", " ", "plot", " ", "do", " ", "modelo", " ", "STS", " ", 
     "usando", " ", "a", " ", "condi\[CCedilla]\[ATilde]o", " ", "inicial", 
     " ", "do", " ", "paper", " ", "do", " ", "muga", " ", "mas", " ", 
     "sobre", " ", "o", " ", "Cp", " ", "de", " ", "Schrodinger", " ", 
     "daquela", " ", "part\[IAcute]cula"}], ",", " ", 
    RowBox[{
    "o", " ", "mesmo", " ", "que", " ", "calculamos", " ", 
     "anal\[IAcute]ticamente", " ", "no", " ", "primeiro", " ", 
     "notebook"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dndt", "[", "t_", "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"E", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"I", "*", "1", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"0.5", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", "50"}], ")"}], "^", "2"}]}], "+", 
                   RowBox[{"2", "*", "1", "*", "t", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "50"}], ")"}]}]}], ")"}]}], "-", 
                RowBox[{"2", "*", "1", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"1", "*", "t"}], "-", 
                   RowBox[{"2", "*", "0.5", "*", "x"}]}], ")"}], "*", 
                 RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", "*", "1", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "*", "t"}], "-", 
                  RowBox[{"2", "*", "I", "*", "0.5", "*", 
                   RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], ")"}]}], 
           "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"I", "*", "1", "*", "t"}], ")"}], "/", "0.5"}], "+", 
                RowBox[{"2", "*", 
                 RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"I", "*", "0.5", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"x", "+", "50"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
                "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "^", "2"}], "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "*", "t"}], "-", 
                    RowBox[{"2", "*", "I", "*", "0.5", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "*", 
              RowBox[{"Erf", "[", 
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"I", "*", "0.5", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", "x"}], "-", 
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "50"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
                  "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "^", "2"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", "t"}], "-", 
                    RowBox[{"2", "*", "I", "*", "0.5", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "/", 
                RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "*", 
                 RowBox[{"(", 
                  RowBox[{"x", "+", "50"}], ")"}]}], "-", 
                RowBox[{"2", "*", "I", "*", "1", "*", 
                 RowBox[{"5", "^", "2"}]}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "*", "I"}], "+", 
                RowBox[{"Erfi", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "*", "x"}], "-", 
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "50"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"1", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", 
                    "0.5"}], "+", 
                    RowBox[{"4", "*", 
                    RowBox[{"5", "^", "2"}]}]}], "]"}]}], ")"}]}], "]"}]}], 
               ")"}]}]}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"5", "^", "2"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", 
              "0.5"}], "+", 
             RowBox[{"4", "*", 
              RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "I"}], ")"}], "*", "1", "*", 
              RowBox[{"(", 
               RowBox[{"x", "+", "50"}], ")"}]}], "-", 
             RowBox[{"2", "*", "1", "*", 
              RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "^", 
       "2"}], "*", 
      RowBox[{"(", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "*", 
          RowBox[{"(", 
           RowBox[{"x", "-", "1"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"I", "*", "1"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}],
        ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.001", ",", "0.999"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8617265244730825`*^9, 3.861726610610222*^9}, 
   3.861778206711474*^9},
 CellLabel->"In[1]:=",ExpressionUUID->"b2968365-9971-452d-88cc-784c3ee5a422"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{"-", 
      RowBox[{"dndt", "[", "t", "]"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "60"}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.8623105059708242`*^9, 3.862310512826208*^9}, {
   3.8623122977520676`*^9, 3.862312302733453*^9}, 3.8623123329094143`*^9},
 CellLabel->"In[35]:=",ExpressionUUID->"c421ae4b-841a-417a-ab08-c29db7bae003"],

Cell[BoxData["1.1511302125714589`"], "Output",
 CellChangeTimes->{3.862310531922081*^9, 3.8623123204796033`*^9, 
  3.8623123976176915`*^9, 3.8623125494452953`*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"0364a4ba-7dc5-499d-8967-5c68986b755c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"-", 
     RowBox[{"dndt", "[", "t", "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "10", ",", "40"}], "}"}], ",", 
   RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.861992680097971*^9, 3.8619926809235144`*^9}, {
  3.8620050456582255`*^9, 3.8620050561894984`*^9}, {3.8623121659661703`*^9, 
  3.8623121870498743`*^9}, {3.862934130308696*^9, 
  3.862934165793382*^9}},ExpressionUUID->"b3156717-b955-4204-bab1-\
c4895617caa7"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$18213#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10, 40}, {0., 0.12774738935782382`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.861992697027045*^9, {3.862312183828998*^9, 3.8623122010105195`*^9}, 
   3.8623125764224367`*^9, 3.862934163612495*^9},
 CellLabel->"Out[13]=",ExpressionUUID->"8d9b2bb0-93f0-4d1f-8de6-ab06a88fbd19"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dndtinterpol", "=", 
  RowBox[{
   RowBox[{"FunctionInterpolation", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"-", 
       RowBox[{"dndt", "[", "t", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "10", ",", "60"}], "}"}]}], "]"}], "//", 
   "Quiet"}]}]], "Input",
 CellChangeTimes->{{3.8617782164835563`*^9, 3.8617782164835563`*^9}, {
   3.8619922126581116`*^9, 3.8619922126581116`*^9}, {3.8623122580147796`*^9, 
   3.8623122644506087`*^9}, 3.8623124123458138`*^9, {3.8623130744582844`*^9, 
   3.86231307449012*^9}},
 CellLabel->"In[2]:=",ExpressionUUID->"52f4cdfb-a0ac-42bd-916f-21ca5dd827c6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAACJtvHAAAJEAgbfUM2w5NPhQdw0ZT
oSVAjJ82HImAlD6gzIXWwGUnQOjw0FjDip0+WrLRGTMMKUBgkjQM5InLPrIg
nvZbqipADozcRfoR8z6KvNk4n2ssQOwISxv1TxU/j46eLucOLkAqEc3CNFYy
PxSO0olJ1S9A12gOZ/PxTT8bi0M/sckwQAfygD/jn2Q/Q2piE8CZMUCihOsy
fGp3PyvgOBpcezJAKvZNo9cPiT8q8dN6+k0zQGEXuU0jyZY/eEYvKHQcNEDv
QepfK4+iP4YyQgh7/DRAkkKNb+l1rD+quRlChM01QMEPVer3abM/jteorhqw
NkCABSTGD+O4P8E5+GeMjjdAKbYUsTREvT8LNwx7AF44QIIN3beO2r8/FcvX
wAE/OUBlUEEI4ljAPzb6Z2AFETpAgp8qQXasvz8XwK8ylvQ6QO5eRPU497w/
R8q3UQLUO0BjwyTEPz25P41vhMpwpDxAFpyOwtFTtT+Tqwh2bIY9QMghnEdd
F7E/sIJRe2pZPkA4HnMgCemqPxyeWs1DKD9A9OtUqdG3pD8kqA0pVQRAQGoS
w+4gYZ4/xU5QmAltQEBLW4YqXz6WP8bA7qCE3kBAYlkH/GwTjz/vVO1P7U1B
QMzOqsLzc4U/ozbOK9e1QUCEezXEZ/F9P7fjCqGHJkJALtKlJtcBdD9W3ilD
uY9CQK69lBc0Lms/Hfuoi9j2QkBMMCm3onNiP0Tjg22+ZkNA8JaZQEYPWD/2
GEF8Jc9DQMV/Om4EDVA/CBpaJFNAREBRPHHuNplEP6ZoVfkBqkRACfbM9Ukh
Oz9r2bB0nhFFQLj2hhR89zE/kBVoiQGCRUDEgDMQYe8mP0CfAcvl6kVApmo7
gFkrHj9Q9PalkFxGQBJfQ9oALBM/iGtMJynMRkDrMRnubpkIP0swhNVCNEdA
RO8OaZNHAD9uwBcdI6VHQNEAtdMo8/Q+HZ6NkYQOSECNsKuhDITsPvOdY6zT
dUhAQSCQBNV65T4paZVg6eVIQBx1/VGDN+E+6oGpQYBOSUDsiN64vxbbPgtm
Gbzdv0lAuYvMMam6yj5UbOncKC9KQARZjdOEFLY+KMCbKvWWSkCZ+b2C5qGk
PlzfqRGIB0tAvXnLcQHLkD4bTJolnHBLQF4ChDKIz4g+OoTm0nbiS0CX6u5y
pnmUPoHekiY/UkxAHrvgZQICoT5ThiGniLpMQMZsXtzgjaY+hfkLwZgrTUC1
L5OA9SioPkO62AcqlU1AAVlO94I7oj4+GeT4//9NQProKV2vyGo+HiapIA==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$11567#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {10., 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {10., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{10., 60.}, {0., 0.12771249201853432`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"10.`", ",", "60.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAACJtvHAAAJEAgbfUM2w5NPhQdw0ZT
oSVAjJ82HImAlD6gzIXWwGUnQOjw0FjDip0+WrLRGTMMKUBgkjQM5InLPrIg
nvZbqipADozcRfoR8z6KvNk4n2ssQOwISxv1TxU/j46eLucOLkAqEc3CNFYy
PxSO0olJ1S9A12gOZ/PxTT8bi0M/sckwQAfygD/jn2Q/Q2piE8CZMUCihOsy
fGp3PyvgOBpcezJAKvZNo9cPiT8q8dN6+k0zQGEXuU0jyZY/eEYvKHQcNEDv
QepfK4+iP4YyQgh7/DRAkkKNb+l1rD+quRlChM01QMEPVer3abM/jteorhqw
NkCABSTGD+O4P8E5+GeMjjdAKbYUsTREvT8LNwx7AF44QIIN3beO2r8/FcvX
wAE/OUBlUEEI4ljAPzb6Z2AFETpAgp8qQXasvz8XwK8ylvQ6QO5eRPU497w/
R8q3UQLUO0BjwyTEPz25P41vhMpwpDxAFpyOwtFTtT+Tqwh2bIY9QMghnEdd
F7E/sIJRe2pZPkA4HnMgCemqPxyeWs1DKD9A9OtUqdG3pD8kqA0pVQRAQGoS
w+4gYZ4/xU5QmAltQEBLW4YqXz6WP8bA7qCE3kBAYlkH/GwTjz/vVO1P7U1B
QMzOqsLzc4U/ozbOK9e1QUCEezXEZ/F9P7fjCqGHJkJALtKlJtcBdD9W3ilD
uY9CQK69lBc0Lms/Hfuoi9j2QkBMMCm3onNiP0Tjg22+ZkNA8JaZQEYPWD/2
GEF8Jc9DQMV/Om4EDVA/CBpaJFNAREBRPHHuNplEP6ZoVfkBqkRACfbM9Ukh
Oz9r2bB0nhFFQLj2hhR89zE/kBVoiQGCRUDEgDMQYe8mP0CfAcvl6kVApmo7
gFkrHj9Q9PalkFxGQBJfQ9oALBM/iGtMJynMRkDrMRnubpkIP0swhNVCNEdA
RO8OaZNHAD9uwBcdI6VHQNEAtdMo8/Q+HZ6NkYQOSECNsKuhDITsPvOdY6zT
dUhAQSCQBNV65T4paZVg6eVIQBx1/VGDN+E+6oGpQYBOSUDsiN64vxbbPgtm
Gbzdv0lAuYvMMam6yj5UbOncKC9KQARZjdOEFLY+KMCbKvWWSkCZ+b2C5qGk
PlzfqRGIB0tAvXnLcQHLkD4bTJolnHBLQF4ChDKIz4g+OoTm0nbiS0CX6u5y
pnmUPoHekiY/UkxAHrvgZQICoT5ThiGniLpMQMZsXtzgjaY+hfkLwZgrTUC1
L5OA9SioPkO62AcqlU1AAVlO94I7oj4+GeT4//9NQProKV2vyGo+HiapIA==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$11567#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {10., 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {10., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{10., 60.}, {0., 0.12771249201853432`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"10.`", ",", "60.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{10., 60.}}, {
   5, 3, 0, {97}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1:eJw10U1EBHEYBvBp6RgrIkuHqKyt/ZrZnY+dndl3v/sgWW0RURGrS8Qeo2M6
RnSJdGurY+qY6BLRJdIp0SXSNXuo9r/P0589/H/zeuadZ4fXNmvrAU3Tejq/
Ve3/jMhCvXMGxqSlTiQsXZYI7tPjUu+eCfhKFPf3KJ5vxORXna+YzCtvxuVU
eTvOnATy7xLMS8Ifk7j368zX4Yc6/EVH3pDB9xrwE4Pvp4dT3COF+YsU96Hr
ae6Vlh/lV2nuR/dM5OyYcqb81kR+rwWftOB7Fr7jgR60kV+zMX9gw5/pIQf5
yw782IG/OcgZzcAbGeS3MvBPesKFb7nwS1fU/6Z9u3LeHc/KovLtLOZvssgP
eJgve/BdD37vYZ8+Hz7nw/d97P9EH8zBl3KYP8rBX+m6YL4p8GuBt4V95tln
nn3m2WeBfRbYZ4F90oNF9llkn0X2SQ+V2GeJfZbYY5n9ldlbhX1V2FOV/VT5
nVOY/5iBa7PyB9MdDTM=
   "], CompressedData["
1:eJwBGQPm/CFib1JlAgAAAGEAAAABAAAAYY5Z6NwNTT5EZ2NjueWGPtgh9Un5
/Ls+ol3xLuak6j4Up667mcYAPyY7IrUp6BM/MEI+YoNKJj+trf6g+lMwPz7k
EOzkljc/SCyQUMjOQD+QuBfcPaFHP8ptg8IXZFA/O+ROJZ5xVj9Wa04VlT9k
P5Qr5YcWYnE/Eh/E3EZ0fD8f+Ji5teOBP3Zd4ldDPoY/fEqYV5Jaiz92gDDK
naOQP8q6DmTjB5Q/RQyNDeXdlz9Pzjn3DCecPy5FxHUFcaA/qD9Xw0cFoz9u
xaG9kMylP0aNa32Iwag/LGP140Xdqz8NEblVaRevP0N9TMkjM7E/rMUIlpHf
sj9HKTYjOYu0P8Exb9IWMLY/5mmjwhLItz9GMflGLE25P35QUoSkubo/Qg7q
ayYIvD/kUYt76jO9P87OQfLUOL4/nHtAfY0Tvz/U7ZW9j8G/P3qD5TKaIMA/
+pJrhNlIwD9SpX2CjlnAP9qSpBwpU8A/kYStNHg2wD+SXmwrnwTAP93o0KsT
fr8/n/Kz1L7Ovj+utK7e6f69P9SZo1l/Er0/8pTCHpANvD+S2o24OvS6P4Qk
ogGVyrk/cN1MZ5iUuD+KtOwVEVa3P8Bq8jCQErY/SjZQGGHNtD+QwQeigYmz
P0u/thidSbI/X7iOvwkQsT+zyKohkb2vP6L74soNb60/uHIjY0M3qz8IXf8G
VBipP37e/OrUE6c/lSj8ktoqpT8tLp7ZBV6jP5qTjlSRraE/be7vs14ZoD9m
nIMZroeaPxg18O7TrpU/BID4nveWkT9+n4zyCliMPyDOMPS3sYY/jH+kFz0R
gj+U3yMHb558P5yPnVFpj3Y/2FwEOoO1cT8qXJYnU7JrP1o2ubPGlWU/mNEb
QoHFYD/hvxtOYf5ZPwjquTrFGFQ/XBXXGlQDTz+gjkf0dONHP+Y5BkfTX0I/
Af/5bZM7PD9gt+9+9Z4wP+6CO//ShyM/g7+T6jDwFj8SDD6YdfYKPzvqh/Bv
wf8+elcth2HB8j6h/0euoRbDPrrKDdb8XpU+bP7/8JbIaj6TAncJ
   "], {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8617782320595875`*^9, 3.8619814036658983`*^9, 
  3.8619866187986736`*^9, 3.861992223409934*^9, 3.8620050194127846`*^9, 
  3.862055856839712*^9, 3.8623045867123156`*^9, 3.8623124278120027`*^9, 
  3.8623126111204104`*^9, 3.8623130886792173`*^9, 3.862314838323698*^9, 
  3.8629334745946465`*^9},
 CellLabel->"Out[2]=",ExpressionUUID->"2e404837-fbc1-46a0-a344-1dbc2ba795bd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"dndtinterpol", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "10", ",", "40"}], "}"}], ",", 
    RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Plot", " ", "da", " ", "distribui\[CCedilla]\[ATilde]o", " ", 
      "temporal", " ", "do", " ", "Muga", " ", "dndt", " ", "em", " ", "x"}], 
     "=", "0"}], ",", 
    RowBox[{
    "tudo", " ", "funcionando", " ", "exatamente", " ", "como", " ", "no", 
     " ", "paper"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.861778257195981*^9, 3.861778257195981*^9}, {
   3.862312629452963*^9, 3.8623126330702744`*^9}, {3.862313065314294*^9, 
   3.8623130653310213`*^9}, 3.8623131387732944`*^9},
 CellLabel->"In[58]:=",ExpressionUUID->"d02b2952-5db6-4fbe-b339-2b834ed254af"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVj3k01Isbxt2UQiJFi1th7PvMWMf4vu/MVIaIm51kjR9abKkkjIiyZOcK
iagrIhNd2Sa0IIqbLF3piizJWkp0u/3+eM5zPuc853POI+N+8tDRNXx8fHk/
8/9+JBe/lY9PDt9SbC+kbzInPtEaul0OyKFrcJ8b+1oKIfvbbFJTphzarXCv
hFXlEJbeMmZ7Rn7uiyoNiivyiIjzVoIR6vK4saPTz1YulzDqJ73UiZDHEU3Z
rFiFLGKF8il/+oU80kXVBcoLk4naxFafIlkF3M55FFujEEOcnkjXdgxWQK3j
b45dfXaOOHS+uLGE95MTiz7Obwgn1MRr2IsbFTF7xFjjgEg8sf7m4x5wUEQ1
DeuMJ7k5xIhh3+GEYkXczwmcuaB1iyj1MOY5zCli9HCt0v1pLhEYf5+kaKiE
X/uW+I0j6gkaVzH2U4wSSrdtDujI4BH8r7OmHr5Qwrdrjpwa9H1EOBqXOL2X
Uca5re0LS05dRBX33jOhIGWcXtn5OFn4FSEk3WKk2aqM4uvka6+0DRPuCd13
rCRUMK/U71R5wHviFUV6WMRNBRszuJ8ryz8SpgMnRJ+WqaC/eJBSnOEi0RjR
AFFfVTDbJParrMwyQVXY6E/fq4qVFTtWz3nzge7m5XLzTFW0YRr3WPiuA9rq
2IcjE6po2rsRhFeEgRjvUfanqWFaqqxRIlMcmD1N3pwENXTqagwkUrYB1XJj
xJYhNXQfd/Sslt4Ncl32mcXq6vg051thCZUEkmbF5Xrh6hjSM3N2t7USrG+f
b23rUsdQzrTo7SINkIgKvzq/QwOrxIZHFSYoQKIJB+44qoFGDdfJtnQ9IC9k
sRmVGphkfnGD/TE6QKncHp8VDbywz2Er3ZIBf5dY8E+YaaLj6vCXbtt9EFoU
Ou6Vr4kr3zjiH1RNYXtBccfYrCZW3uy4snbeApwOTthVSWth33ux922eVvDn
ZN4f9fu18JgGlWShYAcSMVYrj49poaVbe7tMlBMESguad6dq4b8XSkpE2K7w
vK4x//WfWsi3Yc3qL1QPKJSWc1Z4o4XPufTQyDNeEBJzSSqAn4zkr991H1B8
wXRqZqBOiYz6+cJPu0+cgN0W1tkCB8k49qqMuS83AGiv4obCQsjoHqa/wokP
BhvnBtnFfDL219h/iBs6Df6j894+T8io+vqRdWbOOUjwUygfniWjl3J35Vx7
BNSIrnQXSFBQKCHY025zFLzlPl9yM6Sgc5vJa/OQaBCyvyFFcqOgp1z1Ftdt
sUBdPYOjFymYLmEsfunLJbjR/Ov0iwoKanCK6oZcEkHyEi+roZ+CLoMnXcgJ
yRBn4ckq/YWKOtnL8gspqbAssWE2U4WKZ4NLmzc2p8NIsdP61kNUVClasH61
OQvadSr2zIdS8fINuX/D43+HHBtbywMdVBRM6fj90Uo+JK8xZbfMUX/63eNO
vCmA2AojNJTUxsbRAA1ly0IIFpTXUnXTRqPdpb6WnsVwYr+Wai2/Dt4y3Of0
qasMrn+puxF4VQcj5VjlrxSrYJEcbTAIumguWLX2CdSAdKowh/WPLvpf8RN4
+aUWaLGJVRMCenjqDq158uEDsAoTHU1U00OBwJenXKLq4FhAigT1kB522nen
O+vXw0WvLcb9p/XQ68NCpdC7ehg/7/njVoEeXntA9w5KagB2RvX9s216KHlv
1/iASiOUlgn4my7o4SVNh/Tg+40g3GqnJCWlj6NruBcrqU0Q+pXN02Xo47L7
SIFfdhNMqdHsD3nrY9ZRVcrOmSZwdFOdO56oj4uxdy8xd/KgLePXuEtcfRQZ
VfV5qMODyrSGhLF+fbRxC3pMM+FBZsqRFMa/+ph9efGCiQ0Pwq78yMgjGeDH
Quu+dY48cE8syFlmGyBBMl4XbceD5HIxBU6AAUoezy58YsaDxs7IuxtyDHCe
/fzslAEPpj/O0ZObDdD7+nUb9T082LnJ7em2DwaYlzZZ3rLcBLYHAqhTYjS0
mbPlryprgtQ4Tn69Lg23XbhmU2zVBF2PUgSvHKZhfGqBK8z+/M9fGOwWRcPP
j9ZLqEU2whV3jpfLbRreexgUkLjaAFuaXe2dX9LQ1PTstMyJBpDi7KE7KBhi
xGfd2SrtepAsvZOTddAQr+98MtOUVAdifxkt94YY4urDrc4iIw9AQP5wzaEn
hiirzkn5froWVI12VJx2pmPaCnf31fIaOPlGvMWUzwgbJvkDvqdzYXoxwcYk
2wgt1+0QKWythL2aj3NM1Al0qtXYPudUBnWLhitfugistUv3+8q6CX5qlMHu
o4B7C7Zmc7cUwa7TlKmytYhrk+Q9gh3y4c0Q26FlG6Kfj4g8/X4uFOx1eTqg
gih6v7qmTOEqyIonlAj8hij9wvhdmkE25Dt/O9Dggdh7M+n4wEgmSP3xv/mg
EMS0fqHYu1czYCvuo/9zFfFIyIJ6DS0N7v0qVaxeiTikW0pL2ZAKNstzIqGt
iInmWZvuvU+GzKrcYfGPiM4LdHpPYSI05jH/XMvHQMm/OQvsgXgYi5tIXhJn
4FZ38ahlxcuwMTjJZ0Kegfm9b8wWE+NA20WbOajPQOsWdz2GUCxEvma8cTNn
4MjFzjaZ8BjosLMInXRj4KlCE50pwWiQfHlYMiCEgcVdqdzQsihwt/St+nqZ
gQNTWdYZnhzwufs8WvoaA7WT2AdSdCPBX1zHjs1lICXk2jJXNxxCgnKU/Z8w
8KBWz/s2Uhicf/ljJes1A+9Y4zsmJRSE9+oQR2cYKC58OvdT+Bn4nesbSfmF
iWl3r7mujoWAIqmg+ccWJkZsmR8vOHoKqlN713YqMJH2/vbHZ6tB4JUWKKRl
yMTGTlJ4e1IgbE8XFUuzYOKRWd13tgYB0J5eJrHkwcSQuT7lys8nISzDRMrh
DBNdB3cKHr1xHKpv1CS7xTNxm7+VaPQ1P5jhkgR885m4vvNdT0ydDyi2JJ8L
vMvE47mzg+Qv3uDa830utJWJkaQK6zJLL7B+3JxL6mPi5F7Hzfs7PYH9IJb9
bJKJ6/xcdvW7ewD9jtmn4FUmmllrlBmIuQO5cHPBLlEW7ol7Fbn0lyuYKhKi
h0ksbA9ayuxSdAH3Mt/wHD0WjkZZ7mvtPQyh5KyP/QdYSC2VXuy64wipNS2H
t7my8N5Q125ahT1QTHmGK4EsnBAcuM5etIXuofqdwzEsrAHh2dc2NuAfULvc
nM3CiJnv4+0vrUBsXU1/yW0Wkseqx28dPwSR3SDTwGPhwFDXhNw3S5jLa/P5
q5eF1fKaD8f2W4Crr1XV5BQLJefr33p0msFz3aFvP36wcNNimaZCjCn8B9cV
c+Q=
       "]]},
     Annotation[#, "Charting`Private`Tag$180296#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10, 40}, {0., 0.1277472783488273}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8617782620288863`*^9, 3.86199223381348*^9, {3.8623124601550245`*^9, 
   3.8623124831432877`*^9}, {3.862312614885087*^9, 3.8623126363565416`*^9}, 
   3.862313140360242*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"e85fec0a-51e4-4ac7-b740-58fde41bb4b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "atente", " ", "aqui", " ", "ao", " ", "fato", " ", "de", " ", "que", " ",
      "dndt", " ", "ainda", " ", "n\[ATilde]o", " ", "foi", " ", 
     "normalizado"}], ";", " ", 
    RowBox[{"isto", " ", "\[EAcute]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"dndtinterpol", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "10", ",", " ", "60"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.861981228748249*^9, 3.8619813011508493`*^9}, {
   3.861981388567337*^9, 3.861981423370607*^9}, {3.8619866023596725`*^9, 
   3.8619866036851873`*^9}, {3.8619879364615564`*^9, 3.861987947419648*^9}, {
   3.8623126407146997`*^9, 3.8623126448871584`*^9}, 3.86293382654093*^9},
 CellLabel->"In[6]:=",ExpressionUUID->"16208c2d-0e3c-4e0d-b955-9aaa782f4a56"],

Cell[BoxData["1.1511348372520451`"], "Output",
 CellChangeTimes->{
  3.8619813061106863`*^9, 3.8619813444126673`*^9, 3.861981426998558*^9, {
   3.8619879428656735`*^9, 3.861987951090867*^9}, 3.8619880001832385`*^9, 
   3.8619922479254932`*^9, {3.862312618494261*^9, 3.8623126457203217`*^9}, 
   3.8623131469989777`*^9, 3.862933830185764*^9},
 CellLabel->"Out[6]=",ExpressionUUID->"c6fbc6ce-2e91-4d44-9da4-7a160de7ba92"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"A", "*", 
      RowBox[{"NIntegrate", " ", "[", 
       RowBox[{
        RowBox[{"dndtinterpol", "[", "t", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", "10", ",", "60"}], "}"}]}], "]"}]}], "\[Equal]", 
     "1"}], ",", "A"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Normalizando", " ", "como", " ", "fazemos", " ", "normalmente"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8619872800213823`*^9, 3.8619874132680717`*^9}, {
   3.8619875358731723`*^9, 3.8619875840310173`*^9}, {3.8619878888280177`*^9, 
   3.861987915685635*^9}, {3.8619928149897847`*^9, 3.8619928230832796`*^9}, {
   3.8623126632958555`*^9, 3.8623126675876923`*^9}, 3.8623131562442083`*^9, 
   3.862314384128157*^9, 3.86231448972206*^9},
 CellLabel->"In[7]:=",ExpressionUUID->"7ee6a778-168d-41a2-8145-225a75d41195"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"A", "\[Rule]", "0.8687079633409152`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8619875543697987`*^9, 3.8619875859416122`*^9, {3.8619878998470964`*^9, 
   3.8619879183017015`*^9}, 3.8619880031781235`*^9, 3.8619883460259986`*^9, 
   3.861992250997018*^9, 3.8623126703884478`*^9, 3.862313158836878*^9, 
   3.86231485439005*^9, 3.862933837359188*^9},
 CellLabel->"Out[7]=",ExpressionUUID->"8b00c61f-a2ff-4a85-bd89-981a6fd28dc9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"dndtnorm", "[", "t_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"dndtinterpol", "[", "t", "]"}], "*", " ", 
   "0.8687079633409152"}]}]], "Input",
 CellChangeTimes->{{3.8623128002475386`*^9, 3.8623128419778876`*^9}, {
   3.862312951118479*^9, 3.8623129549838*^9}, 3.86231305468919*^9, {
   3.8623131696600633`*^9, 3.862313171196348*^9}, {3.8623135556490583`*^9, 
   3.8623135963783636`*^9}, {3.862313728193443*^9, 3.862313728193443*^9}, {
   3.8623147536838665`*^9, 3.862314755099837*^9}, {3.862933858438802*^9, 
   3.862933866234932*^9}},
 CellLabel->"In[8]:=",ExpressionUUID->"b77b0084-b49a-45d8-9ab2-e14eadec5aa9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"dndtnorm", "[", "t", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "10", ",", "40"}], "}"}], ",", 
   RowBox[{"MaxRecursion", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8619883954292407`*^9, 3.86198843119555*^9}, {
   3.861988642763955*^9, 3.861988648911683*^9}, {3.861991761536275*^9, 
   3.861991810678479*^9}, {3.8619926220828905`*^9, 3.8619926220828905`*^9}, {
   3.861992772710105*^9, 3.8619928462643056`*^9}, {3.8623126986191645`*^9, 
   3.862312704814168*^9}, 
   3.8623143794375954`*^9},ExpressionUUID->"f941ff5b-4949-45ee-ace9-\
3194240c3bb3"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
W2my
       "]]},
     Annotation[#, "Charting`Private`Tag$297868#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10., 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{10, 40}, {0., 0.11126545671551927`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8619884436835475`*^9, 3.8619884767639494`*^9, {3.8619885999931927`*^9, 
   3.861988650203207*^9}, {3.861988682856513*^9, 3.8619886990059204`*^9}, 
   3.8619927537463245`*^9, 3.8619927857809796`*^9, 3.861994514379446*^9, 
   3.862055876281743*^9, 3.862304608237095*^9, 3.8623062164434023`*^9, 
   3.8623127116322412`*^9, 3.862312846872114*^9, 3.8623129733578916`*^9, 
   3.8623131815719256`*^9, {3.86231355996214*^9, 3.8623135892629833`*^9}},
 CellLabel->"Out[77]=",ExpressionUUID->"2abdf8bc-4037-44c9-b0b0-1da2e72fe813"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"dndtnorm", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "10", ",", "60"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{"Verificando", " ", "normaliza\[CCedilla]\[ATilde]o", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
      "ainda", " ", "n\[ATilde]o", " ", "sei", " ", "pq", " ", "a", " ", 
       "fun\[CCedilla]\[ATilde]o", " ", "normalize", " ", "ta", " ", "tendo", 
       " ", "uma", " ", "flutua\[CCedilla]\[ATilde]o", " ", "em", " ", 
       "casas", " ", "decimais", " ", "mais", " ", "pequenas"}], " ", "-", 
      RowBox[{
      "provavelmente", " ", "alguma", " ", "discretiza\[CCedilla]\[ATilde]o", 
       " ", "mal", " ", "feita", " ", "no", " ", "algoritmo", " ", "mesmo"}], 
      " ", "-"}], " ", ")"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.861994412757661*^9, 3.8619944266893144`*^9}, {
  3.8619945216723523`*^9, 3.861994616370555*^9}, {3.8623128556488547`*^9, 
  3.8623129049970894`*^9}, {3.862313188433815*^9, 3.8623131910123577`*^9}, {
  3.8623143956266856`*^9, 3.862314461497024*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"1e4cd8bb-4274-4eda-9f59-9515bbb97b7e"],

Cell[BoxData["1.0000000000000009`"], "Output",
 CellChangeTimes->{
  3.8619944317172565`*^9, 3.8619945172135296`*^9, 3.86205587995945*^9, 
   3.8623062266580133`*^9, 3.8623127173926992`*^9, {3.8623128511745167`*^9, 
   3.862312906104765*^9}, 3.8623129868006735`*^9, 3.8623131932170005`*^9, {
   3.8623135780392275`*^9, 3.8623136143055124`*^9}, 3.8623138210428133`*^9, 
   3.862933874290648*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"67c22a5c-58dc-4b8b-9035-d511fe4a08d5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"muga", " ", "[", "x_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "Pi", "*", 
          RowBox[{"5", "^", "2"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"(", 
              RowBox[{"-", "50"}], ")"}]}], ")"}], "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", "*", 
            RowBox[{"5", "^", "2"}]}], ")"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"I", "*", "1", "*", "x"}], ")"}], "/", "1"}]}], "]"}]}], 
    "]"}], "^", "2"}]}]], "Input",
 CellChangeTimes->{{3.861967736000845*^9, 3.8619677772359257`*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"1baea1c0-466b-4ff7-b519-d86700a87ba5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Agora", ",", " ", 
    RowBox[{
    "vamos", " ", "proceder", " ", "de", " ", "forma", " ", "diferente", " ", 
     "do", " ", "notebook", " ", "anterior", " ", "e", " ", "ploduzir", " ", 
     "o", " ", "STS", " ", "a", " ", "partir", " ", "do", " ", "Cp", " ", 
     "de", " ", "Schrodinger", " ", "espacial", " ", "relacionado", " ", "a", 
     " ", "essa", " ", "part\[IAcute]cula"}], ",", " ", 
    RowBox[{
    "relembre", " ", "que", " ", "isso", " ", "foi", " ", "feito", " ", 
     "atrav\[EAcute]s", " ", "da", " ", "condi\[CCedilla]\[ATilde]o", " ", 
     "inicial", " ", "do", " ", 
     RowBox[{"Muga", ":"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"muga", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "100"}], ",", "0"}], "}"}], " ", ",", " ", 
    RowBox[{"PlotRange", " ", "\[Rule]", " ", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.861778357378788*^9, 3.8617784131606364`*^9}, {
  3.8617784751527133`*^9, 3.8617785274853964`*^9}, {3.861967788940975*^9, 
  3.8619677921530614`*^9}, {3.8619681299799*^9, 3.8619681509788246`*^9}, {
  3.8619682578949156`*^9, 3.861968257912342*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"4f32ecbf-983a-4160-8268-61b849749d14"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$11529#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.8617785308603325`*^9, 3.861967794756132*^9, {3.861968135216583*^9, 
   3.8619681523867955`*^9}, {3.861968252324939*^9, 3.8619682602686844`*^9}},
 CellLabel->"Out[11]=",ExpressionUUID->"91637f7c-6d36-4b97-9f1b-ff4a3a5abc50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"muga", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "100"}], ",", "0"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "vamos", " ", "testar", " ", "a", " ", "normaliza\[CCedilla]\[ATilde]o", 
    " ", "da", " ", "condi\[CCedilla]\[ATilde]o", " ", "inicial", " ", 
    "proposta", " ", "pelo", " ", "Muga", " ", "apenas", " ", "por", " ", 
    "desencargo", " ", "de", " ", "consci\[EHat]ncia"}], "*)"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.861967994966049*^9, 3.861968087837962*^9}, 
   3.8619682766806483`*^9},
 CellLabel->"In[12]:=",ExpressionUUID->"6ecd1984-f15a-4f5e-b2a2-f3816651b04e"],

Cell[BoxData["0.9999999999998204`"], "Output",
 CellChangeTimes->{3.8619680900422306`*^9, 3.8619682784325886`*^9},
 CellLabel->"Out[12]=",ExpressionUUID->"8482d160-d3d4-45a1-9e5e-995060202db6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"2", "*", "Pi"}], "]"}]}], ")"}], "*", 
     RowBox[{"(", 
      RowBox[{"1", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"2", "*", "Pi", "*", 
          RowBox[{"\[Delta]", "^", "2"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"1", "/", "4"}], ")"}]}]}], ")"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "/", 
          RowBox[{"(", 
           RowBox[{"4", "*", 
            RowBox[{"\[Delta]", "^", "2"}]}], ")"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"I", "*", "p0", "*", "x"}], ")"}], "/", "h"}]}], "]"}], "*", 
     RowBox[{"Exp", "[", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"I", "*", 
         RowBox[{"(", 
          RowBox[{"p", "*", "x"}], ")"}]}], ")"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Isto", " ", "\[EAcute]"}], ",", " ", 
    RowBox[{"o", " ", "Cp", " ", "schrodinger", " ", "dessa", " ", 
     RowBox[{"c", ".", "i", ".", " ", "pode"}], " ", "ser", " ", "facilmente",
      " ", "obtido", " ", "atrav\[EAcute]s", " ", "da", " ", "transformada", 
     " ", "de", " ", 
     RowBox[{"fourier", ":"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.861778541300112*^9, 3.861778541300112*^9}, {
  3.861778677812252*^9, 3.8617786791755857`*^9}, {3.861778951222206*^9, 
  3.8617789855588408`*^9}, {3.8617807273016443`*^9, 3.8617807289878845`*^9}, {
  3.8619700873338785`*^9, 3.8619701269114647`*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"15ada212-40c8-41aa-9422-760e2ea85831"],

Cell[BoxData[
 TemplateBox[{
   FractionBox[
    RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
         FractionBox["2", "\[Pi]"], ")"}], 
       RowBox[{"1", "/", "4"}]], " ", 
      SqrtBox[
       FractionBox["1", 
        SuperscriptBox["\[Delta]", "2"]]], " ", 
      SuperscriptBox[
       RowBox[{"(", 
         SuperscriptBox["\[Delta]", "2"], ")"}], 
       RowBox[{"3", "/", "4"}]]}], 
    SuperscriptBox["\[ExponentialE]", 
     FractionBox[
      RowBox[{
        RowBox[{"(", 
          RowBox[{
            RowBox[{"h", " ", "p"}], "-", "p0"}], ")"}], " ", 
        RowBox[{"(", 
          RowBox[{
            RowBox[{"\[ImaginaryI]", " ", "h", " ", "x0"}], "+", 
            RowBox[{
              RowBox[{"(", 
                RowBox[{
                  RowBox[{"h", " ", "p"}], "-", "p0"}], ")"}], " ", 
              SuperscriptBox["\[Delta]", "2"]}]}], ")"}]}], 
      SuperscriptBox["h", "2"]]]], 
   RowBox[{
     RowBox[{"Re", "[", 
       SuperscriptBox["\[Delta]", "2"], "]"}], ">", "0"}]},
  "ConditionalExpression"]], "Output",
 CellChangeTimes->{
  3.8617785640322437`*^9, 3.861778690176868*^9, {3.861968307229065*^9, 
   3.8619683566186323`*^9}, {3.861970317907777*^9, 3.861970335917534*^9}, 
   3.861970443991063*^9},
 CellLabel->"Out[16]=",ExpressionUUID->"8eebd895-5671-4a76-88fa-3cdb841d7b0c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"cp", " ", "[", "p_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "/", "Pi"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "4"}], ")"}]}], "*", 
     RowBox[{"Sqrt", "[", 
      RowBox[{"1", "/", 
       RowBox[{"5", "^", "2"}]}], "]"}], "*", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"5", "^", "2"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"3", "/", "4"}], ")"}]}]}], ")"}], "/", "\n", "   ", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "*", "p"}], " ", "-", " ", "1"}], ")"}], "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"I", "*", "1", "*", 
          RowBox[{"(", 
           RowBox[{"-", "50"}], ")"}]}], " ", "+", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "*", "p"}], " ", "-", " ", "1"}], ")"}], "*", 
          RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}], "/", 
     RowBox[{"1", "^", "2"}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{
    "definindo", " ", "uma", " ", "fun\[CCedilla]\[ATilde]o", " ", "para", 
     " ", "chamar", " ", "dentro", " ", "da", " ", 
     "integra\[CCedilla]\[ATilde]o", " ", "do", " ", "STS"}], 
    "*)"}]}]}]], "Input",
 CellChangeTimes->{
  3.8617787507031126`*^9, {3.861778783103552*^9, 3.8617787857077436`*^9}, 
   3.861778879438348*^9, {3.86177899423472*^9, 3.8617790113345385`*^9}, {
   3.8617800168682365`*^9, 3.861780016971675*^9}, 3.8617805318699265`*^9, {
   3.8617805622585344`*^9, 3.861780697671095*^9}, {3.8617807318469453`*^9, 
   3.8617807346279335`*^9}, {3.86178078661172*^9, 3.8617807909865627`*^9}, {
   3.8617811014110746`*^9, 3.861781127190428*^9}, 3.8617820185522814`*^9, 
   3.861782067617091*^9, {3.861968347928088*^9, 3.8619684756787252`*^9}, {
   3.861970348775114*^9, 3.861970434542308*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"62a42bdd-3f1a-431f-8b3c-9de89e543b0c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"cp", "[", "p", "]"}], "]"}], "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"p", ",", "0", ",", "10"}], "}"}]}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Aqui", " ", "\[EAcute]", " ", "poss\[IAcute]vel", " ", "verificar", " ", 
    "a", " ", "normaliza\[CCedilla]\[ATilde]o", " ", "do", " ", "Cp"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.8619678764087*^9, 3.8619679828994164`*^9}, {
  3.8619704996347494`*^9, 3.861970499701248*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"5d87c89a-a9cd-4af3-84da-3958d34efe17"],

Cell[BoxData["1.0000000000000935`"], "Output",
 CellChangeTimes->{{3.8619679158400106`*^9, 3.861967938607104*^9}, 
   3.861968493430277*^9, 3.8619704516063633`*^9, 3.8619705007118607`*^9, 
   3.861972977639665*^9},
 CellLabel->"Out[25]=",ExpressionUUID->"a36df895-9af8-48bb-b18e-5b109051ecd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"cp", "[", "p", "]"}], "]"}], "^", "2"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"p", " ", ",", " ", "0", " ", ",", " ", "5"}], "}"}], ",", " ", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], "  ", ",", " ", 
   RowBox[{"MaxRecursion", "\[Rule]", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8617812627837315`*^9, 3.861781415762662*^9}, {
  3.861970467043462*^9, 3.861970493053565*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"6624fad8-ff20-479a-b8ee-b624546693b1"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
f1uyAzNgZtAdDjDhp9iiT3/iDkzxQn+rkikTwr8EP/p5dgfGsVPbP/8gE0K5
FWIXp/Sx2r7eli4zJtSqv9dL+KeHmchq3BA5xoQq0umS3mO6WIlNpaMfsn/H
IdUDhrqY/pOTFoPI3vyJRb3bdTH5pUDZd8eZYJn6PWOqRwdjq+1q0rdmwm/W
9ftzQjpYpetdmROnmEDedrVnKVoLg8zOxih7JmzKzA9baVbHCiZccinIp1Xi
sao36pi2xGqSrQMT3m0b6W71U8ek7yv7yJ5lwrnrUrppiurY+olb27POMeG1
ho7I6ftq2Deqone7ExMKLyjbWhxUxYww/22CbkwYb3vuLb6qhOV5C3B5I4fs
bcw70q+EaX58S+5GPrx8uai4QAmTEmqtS3JH66MfW6nnrYSxfsl5aV1hwn4/
M7H4WUWs5GFzraUnExIOnXfaMKOA7W6V9nh6nQlb/lm2KXLKY1lsebYk5EWH
O2t3Z+Qw1V1m+61vMMFRPzmNs0UOk3jtI7HND43nWfrFF8/lMJpXY/Vnfyb8
Mr22s05RDisQ9RZvusUEs3xL4uajsthO+7pK7iAmTI5YnLv6YDuWHnXmyxVk
yzqChrnNdkyxjhTbgfz2t0Cwl9J2TFRb8vLLB0xwIb+TftkohVH+eWxRfcgE
3Zr8sYPCUljeOwn3QyFMmL1Y/q8mRxLTn70s8iiCCULeK1RXJQnsswzb+h/k
ozps8Z/WxTF5m7iZI5FM0D9uzVTpE8eEyyvLt0QxQfXZp8f9T8WxxYgtl94/
Y4KE5NE6TqoYlqVfUVYbwwT6jatmBt1bMO0AYZeNiUx4ob9DJqpMBPuQ8fGY
K7JthXd2xSsRTHrCaF8zMreR8gW5OyKYoKWr0PNXKJ63FBZvYiLY/PayEvlk
Jmjaq7r41Qhj6VUXCSZvUD58fpTo1LMZ0+ApLrr3kQnFjaUlm6SFsLdEq3eT
yIMSo8cXNgphkt4T4YfTmMBF3+C7+pOA8Q4KXBD6xAS//SGrelcJ2N90J4GU
z0yIcWn47fJOEPt8jN+p4isTkvFl4zBpAUz15Tm+9Vwm6C3jYU8tebGUFsrK
+TyULxSDZzVyvJgEW+hYHfJ9Ke+3QOPBuN3z8sPzmbDnSdl+9nc82PQ+Hsft
hUzYzc8j+WGNG/swmpNnVMKEhmD7fsGKTZiSCtfZW5VMyMz68b7YkxN79V/i
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
WE4lLs0Hfmci07e0+dQ1pRLrzVVUXfNZsHWoKfDL21TiFY4bv6GABX6dZnVn
rFOJJX4ijouFLGDsLq/cVfSOaHPW6qRNKYqPHlfQ1ci3RJXSldxK5KX4PpWI
y2+JTPEkYa0yFnCcMx5cOvSW+KZztp2znAWq+peuPWJ7S1w48MS88BsLFL/L
ljb6vSE+0agFyWoWNLhlvzvqlUL8Rt+jPtaI6nfcrocPpJKIz07+CrH8zoJm
3f1/1ideEZ1zQqaLkO0eXuec+vKKyHelN/VZEwuaOi+YUIxeEW1HfWX2t7Dg
yXMFBdaFROJyXaboh3YWHJ0MKuOpiyfWy5/2Ee5gwQrb4Knf0fHEhMD1zrvI
svv2lcqejyfie45Enu5E9dX09pa89ZfEiPS/PDw/UX32dK3Yg70kqj5X+ne5
B9Wzpcd31NviiCxSi0MfsvhGJ9vsN3HENkvfsgO9LHDbuvO/8OtxxOtcNTe3
97FAHtM/YyIdR6y+6Uhp62fB+gHXTZE+sUQHx8Q/esNov/9TF9fSiiFGa23u
ok2gev38yp8Hfc+IF0OL9J0nWaARXyscmf+MuHv63LMO5LMdRgHD0c+IoykZ
Vp9+s0C0b4LbxOoZUVPU8vuZaRYYXTx7R6oxitjAfPSt/C8LLF03jdtGRhIT
TmtvV59lwfY5q/kLxyOJHnndt+KQjwZsuTolEkkU9VDc4znHAp3kqf1WCRFE
p19VubILLPQe41yPSg8nrjaspj1YRPk5XXdSaeopsV0xdRMZOdSv3sg48ynx
7X0LF/slFpQSe3c1+D8lmu1LUNi5zAIRIwljQYGnxLgMw+QpCgsMDdp5fPaG
EvVivZ+b0Vno/rqDvPAxhOjiNHOH8A+1J3LPJbfxIXFPReTQrf81Vd/RVL9/
AMCt7GsU2TPKKmQkPo/nFoVEMhIiI9KShKzK6CpbqJSkjFJKJSN7JmR8UYrI
zkwhs+dz/T5//M659/nvdc7zPp/nfd7jQxhZKQ4/TacAbvE9epOE/Tsmfv3y
oYB3XyirNQwIapIW9vlKUgCDybbLPkwIXiv7XWAReAOkqTp5ftmEYGkfm0s9
iABesZs+7mNFUCFvoOeZUATYP/VSPp/w4wI1n575cDCZ+W8kkg3B32Iro7zP
woH21vuOOhwIcvhrBYwJhIP/ULdlGjeCKkc4OtPxUJBtF/yWjYRgdy+L/9j3
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
bl/boPP/AHNXA+I=
       "]]},
     Annotation[#, "Charting`Private`Tag$43289#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.861781303648822*^9, 3.8617813276828923`*^9}, {
   3.8617813635117517`*^9, 3.8617813743435516`*^9}, {3.8617814116577816`*^9, 
   3.8617814167420673`*^9}, 3.8617820289493513`*^9, 3.861782072588626*^9, 
   3.8619678673747406`*^9, {3.8619704592323303`*^9, 3.861970494320325*^9}, 
   3.86197298152279*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"7e1bda06-fb1f-441a-bb8a-3b948a5df473"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Agora", ",", 
    RowBox[{
    "adicionando", " ", "o", " ", "propagador", " ", "e", " ", "voltando", 
     " ", "a", " ", "transformada", " ", "de", " ", "Fourier", " ", "com", 
     " ", "o", " ", "Cp", " ", "calculado", " ", "para", " ", "schrodinger", 
     " ", "para", " ", "obter", " ", "uma", " ", "nova", " ", 
     "distribui\[CCedilla]\[ATilde]o", " ", "temporal", " ", 
     RowBox[{"STS", ":"}]}]}], " ", "*)"}], 
  RowBox[{
   RowBox[{"sts", "[", 
    RowBox[{"x_", ",", "t_"}], "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "/", 
        RowBox[{"Sqrt", "[", "Pi", "]"}]}], ")"}], "*", 
      RowBox[{"Sqrt", "[", "p", "]"}], " ", "*", 
      RowBox[{"cp", "[", "p", "]"}], " ", "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"(", 
        RowBox[{"I", "*", 
         RowBox[{"(", 
          RowBox[{"p", "*", "x"}], ")"}]}], ")"}], "]"}], "*", 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"I", "*", "t", "*", 
          RowBox[{"p", "^", "2"}]}], ")"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", "0", ",", "100"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8617791187807364`*^9, 3.8617791755889587`*^9}, {
   3.8617800087325087`*^9, 3.8617800252275853`*^9}, {3.861780094472086*^9, 
   3.8617801219723587`*^9}, {3.8617801681399236`*^9, 
   3.8617801689037523`*^9}, {3.8617803562585945`*^9, 3.861780380959975*^9}, 
   3.8617808420208044`*^9, 3.8617808945103407`*^9, {3.8617810574190865`*^9, 
   3.8617810666705265`*^9}, {3.861781138554612*^9, 3.8617811438521314`*^9}, {
   3.861781445476036*^9, 3.8617814460962725`*^9}, 3.8617814772679768`*^9, {
   3.8617818445055485`*^9, 3.861781846396351*^9}, {3.861781890673622*^9, 
   3.861781892777534*^9}, {3.861970283804533*^9, 3.8619702859635077`*^9}, {
   3.86197279623942*^9, 3.8619728179517064`*^9}, {3.861972897577625*^9, 
   3.8619729371674953`*^9}, {3.8619747565139647`*^9, 3.861974757272958*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"32a5f021-0a37-470d-a692-c100ca8b2ce7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Abs", "[", 
   RowBox[{"sts", "[", 
    RowBox[{"0", ",", "2"}], "]"}], "]"}], "^", "2", " ", 
  RowBox[{"(*", 
   RowBox[{
   "Rodando", " ", "pra", " ", "um", " ", "valor", " ", "arbitr\[AAcute]rio", 
    " ", "antes", " ", "de", " ", "plotar", " ", "s\[OAcute]", " ", "pra", 
    " ", "ver", " ", "se", " ", "ocorreu", " ", "tudo", " ", "bem", " ", 
    "com", " ", "a", " ", "integral", " ", "em", " ", "termos", " ", "de", 
    " ", "convergencia", " ", "etc"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.861781028019511*^9, 3.861781051943881*^9}, {
  3.861973186455179*^9, 
  3.861973223929557*^9}},ExpressionUUID->"3b8282c5-1f6c-4821-99d2-\
7f7f271c3e49"],

Cell[BoxData["6.124925407093223`*^-20"], "Output",
 CellChangeTimes->{{3.861781030001683*^9, 3.8617810717226963`*^9}, 
   3.8617811543476048`*^9, 3.8617814522197285`*^9, 3.8617814837290764`*^9, 
   3.861781867177313*^9, 3.8617818999870462`*^9, 3.861973183885321*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"904b7c85-b308-4e9c-8c9a-d8011d67a521"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"sts", "[", 
       RowBox[{"0", ",", "t"}], "]"}], "]"}], "^", "2"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", " ", "0", ",", " ", "60"}], "}"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "perceba", " ", "que", " ", "essa", " ", "distribui\[CCedilla]\[ATilde]o",
      " ", "do", " ", "sts", " ", "j\[AAcute]", " ", "est\[AAcute]", " ", 
     "normalizada", " ", "como", " ", "eduardo", " ", "falou"}], ",", " ", 
    "\"\<a no\[CCedilla]\[ATilde]o de probabilidade vem daquela ra\[IAcute]z \
de p, ela e o cp que transformam o sts num,a distribui\[CCedilla]\[ATilde]o \
de probabilidade temporal da nossa particula\>\""}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.8619750084615555`*^9, 3.86197505102474*^9}, {
  3.8619751338887606`*^9, 3.8619751955659385`*^9}, {3.8619752322583942`*^9, 
  3.861975253857726*^9}, {3.8619754174019036`*^9, 3.861975422722644*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"dc120e2e-571e-4226-b71e-6f1e5911a04c"],

Cell[BoxData["0.9999999607682615`"], "Output",
 CellChangeTimes->{3.8619750614694242`*^9, 3.8619754323117795`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"446175ff-1a33-42fd-a2c0-9fc4ce922c85"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{"sts", "[", 
       RowBox[{"0", ",", "t"}], "]"}], "]"}], "^", "2"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "10", ",", "40"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", " ", 
    RowBox[{"MaxRecursion", "\[Rule]", "5"}]}], "]"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Plotando", " ", "a", " ", "curva", " ", "sts", " ", "para", " ", 
      "detector", " ", "na", " ", "posi\[CCedilla]\[ATilde]o", " ", "x"}], 
     " ", "=", " ", "0"}], ",", " ", 
    RowBox[{
    "aparentemente", " ", "com", " ", "as", " ", 
     "corre\[CCedilla]\[OTilde]es", " ", "o", " ", "comportamento", " ", 
     "bate", " ", "okay", " ", "com", " ", "o", " ", "gr\[AAcute]fico", " ", 
     "do", " ", 
     RowBox[{"muga", "!"}]}]}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8617804933230033`*^9, 3.8617804999317956`*^9}, {
   3.861780922884198*^9, 3.8617809249523096`*^9}, {3.861780964432305*^9, 
   3.8617809901611185`*^9}, {3.8617814673794813`*^9, 
   3.8617814680977316`*^9}, {3.8617815364021506`*^9, 3.8617815408356557`*^9}, 
   3.8617815938271675`*^9, {3.86178163172274*^9, 3.861781631840855*^9}, {
   3.861781676824317*^9, 3.86178168126616*^9}, {3.861781722828747*^9, 
   3.8617817229086194`*^9}, {3.861781759335004*^9, 3.861781759793749*^9}, 
   3.8617818532687016`*^9, {3.86178214538882*^9, 3.861782145757352*^9}, {
   3.8617837463869514`*^9, 3.8617837608874245`*^9}, {3.8617837945162163`*^9, 
   3.861783800025835*^9}, {3.8617838358250265`*^9, 3.8617838427974405`*^9}, {
   3.8617838859729657`*^9, 3.861783892068903*^9}, {3.8617839364743237`*^9, 
   3.861783939969409*^9}, 3.8617839868503695`*^9, {3.86178404872922*^9, 
   3.861784154628253*^9}, {3.861784315883011*^9, 3.861784331019461*^9}, {
   3.86178439046294*^9, 3.861784567101981*^9}, {3.86197302524501*^9, 
   3.8619731395317116`*^9}, {3.8619732263816566`*^9, 3.861973334225231*^9}, {
   3.86197461774712*^9, 3.8619746471784153`*^9}, 3.8619752159439573`*^9, {
   3.8619752635455723`*^9, 3.861975276904001*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"bbef91f4-3b23-43e0-9439-97bb03b45f6a"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$451959#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{10.000000612244898`, 0},
  BaseStyle->{FontFamily -> "Arial"},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.861780517106604*^9, 3.861780545972625*^9}, 
   3.8617808076163025`*^9, 3.8617809299580784`*^9, 3.8617810048555274`*^9, 
   3.8617811852166047`*^9, 3.861781470975689*^9, 3.8617815052604713`*^9, 
   3.8617815684074235`*^9, 3.8617816169318476`*^9, 3.861781656805267*^9, 
   3.86178170396517*^9, 3.8617817493182197`*^9, 3.8617817950605783`*^9, 
   3.8617818751753902`*^9, 3.861781931595508*^9, 3.8617820434564085`*^9, 
   3.861782117949993*^9, 3.8617821627587805`*^9, 3.8617837766365514`*^9, 
   3.861783825268714*^9, 3.8617838751805377`*^9, 3.861783926441644*^9, 
   3.8617839618305597`*^9, 3.8617840028280196`*^9, {3.8617841572052555`*^9, 
   3.86178417413571*^9}, 3.861784369364575*^9, {3.8617844127751303`*^9, 
   3.861784471328286*^9}, {3.861784513679728*^9, 3.861784530861641*^9}, 
   3.8617845712489996`*^9, {3.861973017331975*^9, 3.8619730866152506`*^9}, {
   3.8619731276481447`*^9, 3.8619731558181334`*^9}, 3.861974638427304*^9, 
   3.8619746724794545`*^9, 3.8619747988455048`*^9, 3.8619752406501913`*^9, {
   3.861975280364334*^9, 3.8619752978426723`*^9}},
 CellLabel->"Out[42]=",ExpressionUUID->"02ad61f5-662a-4e4e-98d7-eddfe82b4c38"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "para", " ", "calcular", " ", "o", " ", "J", " ", "tal", " ", "qual", " ", 
    "fizemos", " ", "em", " ", "python"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"nmais", "[", "t_", "]"}], ":=", " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"I", "*", "1", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.5", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", "50"}], ")"}], "^", "2"}]}], "+", 
                  RowBox[{"2", "*", "1", "*", "t", "*", 
                   RowBox[{"(", 
                    RowBox[{"-", "50"}], ")"}]}]}], ")"}]}], "-", 
               RowBox[{"2", "*", "1", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "*", "t"}], "-", 
                  RowBox[{"2", "*", "0.5", "*", "x"}]}], ")"}], "*", 
                RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
             RowBox[{"(", 
              RowBox[{"2", "*", "1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"1", "*", "t"}], "-", 
                 RowBox[{"2", "*", "I", "*", "0.5", "*", 
                  RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "*", "Pi"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "4"}], ")"}]}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"1", "*", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"I", "*", "1", "*", "t"}], ")"}], "/", "0.5"}], "+", 
               RowBox[{"2", "*", 
                RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"I", "*", "0.5", "*", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"x", "+", "50"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
               "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"1", "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"1", "*", "t"}], "-", 
                   RowBox[{"2", "*", "I", "*", "0.5", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "*", 
             RowBox[{"Erf", "[", 
              RowBox[{
               RowBox[{"Sqrt", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"I", "*", "0.5", "*", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", "x"}], "-", 
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "50"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
                 "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"1", "^", "2"}], "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", "t"}], "-", 
                    RowBox[{"2", "*", "I", "*", "0.5", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"1", "*", 
                RowBox[{"(", 
                 RowBox[{"x", "+", "50"}], ")"}]}], "-", 
               RowBox[{"2", "*", "I", "*", "1", "*", 
                RowBox[{"5", "^", "2"}]}]}], ")"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "2"}], "*", "I"}], "+", 
               RowBox[{"Erfi", "[", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"1", "*", "x"}], "-", 
                   RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "50"}], ")"}]}], "-", 
                   RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"1", "*", 
                   RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", 
                    "0.5"}], "+", 
                    RowBox[{"4", "*", 
                    RowBox[{"5", "^", "2"}]}]}], "]"}]}], ")"}]}], "]"}]}], 
              ")"}]}]}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"5", "^", "2"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "4"}], ")"}]}], "*", 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", 
             "0.5"}], "+", 
            RowBox[{"4", "*", 
             RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"-", "I"}], ")"}], "*", "1", "*", 
             RowBox[{"(", 
              RowBox[{"x", "+", "50"}], ")"}]}], "-", 
            RowBox[{"2", "*", "1", "*", 
             RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "^", "2"}],
      ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.001", ",", "0.999"}], "}"}]}], "]"}], 
   " "}]}]], "Input",
 CellChangeTimes->{
  3.8629335809661837`*^9, {3.862933690325779*^9, 3.862933713561355*^9}, {
   3.86293395951993*^9, 3.862934003563956*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"2fbcf0fb-6b39-454c-8024-305be6c0c762"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dwelltime", " ", "=", " ", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"nmais", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0.001", ",", "0.999"}], "}"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.8629340179204416`*^9, 3.8629340546803775`*^9}, {
   3.86293428929083*^9, 3.8629342893068504`*^9}, 3.862934581433917*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"b4eebda1-c872-414f-b5de-ffa82dc6de69"],

Cell[BoxData["2.2572764399402818`*^-23"], "Output",
 CellChangeTimes->{3.8629345853238072`*^9},
 CellLabel->"Out[23]=",ExpressionUUID->"ecc58b1c-9952-4e16-94aa-48c43e01beca"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"j0", "[", "t_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"dndtinterpol", "[", 
    RowBox[{"t", "+", "0.62"}], "]"}], " ", "+", " ", "dwelltime", 
   " "}]}]], "Input",
 CellChangeTimes->{{3.862934064722847*^9, 3.8629340753862677`*^9}, {
   3.8629341854671435`*^9, 3.8629342094481635`*^9}, {3.8629349384964485`*^9, 
   3.8629349462872467`*^9}, {3.862935010194462*^9, 3.8629350270171504`*^9}, 
   3.8629352648904743`*^9, {3.8629353984839487`*^9, 3.8629353993842025`*^9}, 
   3.862935478740634*^9, {3.862935521928974*^9, 3.862935523840344*^9}, 
   3.862936093223982*^9},
 CellLabel->"In[46]:=",ExpressionUUID->"bddc84f0-7209-41a2-872f-80034e3e79e4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "*", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"j0", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "10", ",", "50"}], "}"}]}], "]"}]}], " ", "==", " ",
     "1"}], ",", "A"}], "]"}]], "Input",
 CellChangeTimes->{{3.862934846447384*^9, 3.8629348810910225`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"fd9d8341-533b-4af4-9fe6-6ef24bfa61eb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"A", "\[Rule]", "0.8687207449837796`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8629348857505207`*^9, 3.8629349557209406`*^9, 
  3.8629351229193687`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"95c31a93-1847-414e-9e56-b23984486ba1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"stsinterpol", "=", 
  RowBox[{
   RowBox[{"FunctionInterpolation", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"sts", "[", 
        RowBox[{"0", ",", "t"}], "]"}], "]"}], "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "10", ",", "60"}], "}"}]}], "]"}], "//", 
   "Quiet"}]}]], "Input",
 CellChangeTimes->{{3.862313342518857*^9, 3.862313359323317*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"528ba2d9-abee-41bc-966f-2de38500d80f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAACJtvHAAAJEBIzjYH7wdjPhQdw0ZT
oSVAfPlsMqD/pD6gzIXWwGUnQIQF1lJ157I+WrLRGTMMKUDc5eK3i33ePrIg
nvZbqipAToaaKi7gAj+KvNk4n2ssQIOtNxrtjSM/j46eLucOLkCFxVmbins/
PxSO0olJ1S9AYZc7K2D3Vz8bi0M/sckwQBiM4QxO4G4/Q2piE8CZMUDVoBDu
HX+APyvgOBpcezJA64rnqWKQkD8q8dN6+k0zQKUkkxn4bpw/eEYvKHQcNECV
xsOmsu2lP4YyQgh7/DRADEjJWy7Crz+quRlChM01QFJulxbnk7Q/jteorhqw
NkC5vACfaAC5P8E5+GeMjjdAevEt337zuz8LNwx7AF44QDGiWD/EEr0/FcvX
wAE/OUDBgeMhiHa8Pzb6Z2AFETpAIGa6tThuuj8XwK8ylvQ6QICWUooLIbc/
R8q3UQLUO0AGvDwssFWzP41vhMpwpDxACFOvQ/p7rz+Tqwh2bIY9QOh4oFz+
Rag/sIJRe2pZPkDPjcGURHWiPxyeWs1DKD9ACp4W7uiBmz8kqA0pVQRAQI+D
qZOgfZM/xU5QmAltQEBXMi27ga6LP8bA7qCE3kBAulff/Lq6gj/vVO1P7U1B
QBuLakbIF3k/ozbOK9e1QUCSUcNKdQtxP7fjCqGHJkJAgavmH7MkZj9W3ilD
uY9CQJn1ALMSVF0/Hfuoi9j2QkB4oDcpaG9TP0Tjg22+ZkNAg5/gmJOwSD/2
GEF8Jc9DQIiUl0MIF0A/CBpaJFNAREBawUQnmCs0P6ZoVfkBqkRAriYX0IUH
Kj9r2bB0nhFFQKjAe1qj4iA/kBVoiQGCRUBmJiAIxxkVP0CfAcvl6kVAKzXp
OjY5Cz9Q9PalkFxGQFbPxsb38wA/iGtMJynMRkC8fk6frFb1PkswhNVCNEdA
OIAqsU/B6z5uwBcdI6VHQOaNmvqFjeE+HZ6NkYQOSECG5B6G+KDXPvOdY6zT
dUhAfftz4mrw0T4paZVg6eVIQObKDkvlZc0+6oGpQYBOSUBeNvtUa23HPgtm
Gbzdv0lALnr8EJzdtT5UbOncKC9KQOYy2t3VHaA+KMCbKvWWSkAxTLXWqnWK
PlzfqRGIB0tA4EImaNgBbz4bTJolnHBLQPQT5c++XWc+OoTm0nbiS0Cx3GPW
KeN8PoHekiY/UkxAgw4kErpZiz5ThiGniLpMQCevJatY3ZI+hfkLwZgrTUAq
n2Ar+YKUPkO62AcqlU1AEUH6k0X2jj4+GeT4//9NQPVs90meBVI+DqSvPA==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$193640#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {10., 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {10., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{10., 60.}, {0., 0.11356760546244328`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"10.`", ",", "60.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAACJtvHAAAJEBIzjYH7wdjPhQdw0ZT
oSVAfPlsMqD/pD6gzIXWwGUnQIQF1lJ157I+WrLRGTMMKUDc5eK3i33ePrIg
nvZbqipAToaaKi7gAj+KvNk4n2ssQIOtNxrtjSM/j46eLucOLkCFxVmbins/
PxSO0olJ1S9AYZc7K2D3Vz8bi0M/sckwQBiM4QxO4G4/Q2piE8CZMUDVoBDu
HX+APyvgOBpcezJA64rnqWKQkD8q8dN6+k0zQKUkkxn4bpw/eEYvKHQcNECV
xsOmsu2lP4YyQgh7/DRADEjJWy7Crz+quRlChM01QFJulxbnk7Q/jteorhqw
NkC5vACfaAC5P8E5+GeMjjdAevEt337zuz8LNwx7AF44QDGiWD/EEr0/FcvX
wAE/OUDBgeMhiHa8Pzb6Z2AFETpAIGa6tThuuj8XwK8ylvQ6QICWUooLIbc/
R8q3UQLUO0AGvDwssFWzP41vhMpwpDxACFOvQ/p7rz+Tqwh2bIY9QOh4oFz+
Rag/sIJRe2pZPkDPjcGURHWiPxyeWs1DKD9ACp4W7uiBmz8kqA0pVQRAQI+D
qZOgfZM/xU5QmAltQEBXMi27ga6LP8bA7qCE3kBAulff/Lq6gj/vVO1P7U1B
QBuLakbIF3k/ozbOK9e1QUCSUcNKdQtxP7fjCqGHJkJAgavmH7MkZj9W3ilD
uY9CQJn1ALMSVF0/Hfuoi9j2QkB4oDcpaG9TP0Tjg22+ZkNAg5/gmJOwSD/2
GEF8Jc9DQIiUl0MIF0A/CBpaJFNAREBawUQnmCs0P6ZoVfkBqkRAriYX0IUH
Kj9r2bB0nhFFQKjAe1qj4iA/kBVoiQGCRUBmJiAIxxkVP0CfAcvl6kVAKzXp
OjY5Cz9Q9PalkFxGQFbPxsb38wA/iGtMJynMRkC8fk6frFb1PkswhNVCNEdA
OIAqsU/B6z5uwBcdI6VHQOaNmvqFjeE+HZ6NkYQOSECG5B6G+KDXPvOdY6zT
dUhAfftz4mrw0T4paZVg6eVIQObKDkvlZc0+6oGpQYBOSUBeNvtUa23HPgtm
Gbzdv0lALnr8EJzdtT5UbOncKC9KQOYy2t3VHaA+KMCbKvWWSkAxTLXWqnWK
PlzfqRGIB0tA4EImaNgBbz4bTJolnHBLQPQT5c++XWc+OoTm0nbiS0Cx3GPW
KeN8PoHekiY/UkxAgw4kErpZiz5ThiGniLpMQCevJatY3ZI+hfkLwZgrTUAq
n2Ar+YKUPkO62AcqlU1AEUH6k0X2jj4+GeT4//9NQPVs90meBVI+DqSvPA==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$193640#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {10., 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {10., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{10., 60.}, {0., 0.11356760546244328`}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"10.`", ",", "60.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{10., 60.}}, {
   5, 3, 0, {85}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1:eJw1kTtIw2AUhX8LjkIRXAQHQaVU+0rSZ5L2Jm1aHyBSjIIgiODiIhQyCo7i
LjiKm1VHwVEEF0FwEcTJxcXFVbpo/5zjhQz3u6fn3v90evegu5dQSo0Mv1D9
14xshMOamJO+rnRKYixp9MvzEsa1AL6TQf+ZwXw/K7+6vrOyrnmUk0vNBzn6
5OH/mKdfAfylgH7coL8BfmaAvxvwmzK51wS/MLmfPGXxDgv6G4v3sI+KvKcI
/VFJrnT/UILPaBl8sQx+Usa9z+TJCvy7FehPK+Bv5JNV7Nmugp9X8fvZGvz6
NfC8jb5nY35ri/4f1I8t17HMkU3NDx3o7x34J1zoAxf82AV/crF3rA6+Vsd9
r3XMtxrgHw30hmAeCfidgA8EPq7HfDzm4zEfn/n4zMdnPuTJJnNpMo8Wc2gx
h4A5BMyhzfe3+e4O39vh/UvQf62Aq1X5A4mk6DY=
   "], CompressedData["
1:eJwBuQJG/SFib1JlAgAAAFUAAAABAAAAUsqrfHcHYz7HjJFWo2ubPgu443r4
qM4+WNalwle7+j4pwLWR/x0QPy0y4Ce2UiI/K468PtmqMz+fS96lFDc8P+7Q
in9D9kM/UM8j9XLdSz+HVelFvjBTP0e9uyVjFlo/92ha5AmBYT8OcV7Z41lu
P67uR/aeDnk/bYL9SE68gz8A4Gcs2VmIPw2cqOMkt40/hbUKr4vvkT8uwnpE
bGyVPz3B3HWDU5k/am+ARoSjnT+g0VIiISyhPyrfZQpEtaM/Cg/o8gVopj+n
k3Muwj2pP4r2uFhvLqw/o2gbYMowrz/PGpYYYaCyP9MQCWJVirU/CmCx6wQp
uD+h1z0FE0+5P2PiPMKaU7o/bjj5SO0yuz8v1gA3Huq7P2yMsOERd7w/7hFe
IYTYvD+xDy3YBw69P7tZQbf/F70/6GgXCJH3vD+1z/Rxka68PxewptNwP7w/
UIx2WCCtuz9rNTsvmyy6P258XQyvSrg/1Ah3ApQmtj/S7mKSMgW1P0vTnqdQ
3rM/bCfxPSm1sj8USSRRrYyxP/bBrgV+Z7A/kQHj99KPrj/H9GwG1F+sP6BO
xrFOQqo/muSvOPM5qD8kBAhA20imP5xvEoeUcKQ/9O9FES2yoj+yVxVUCAqf
P8TRCv+bg5k/3CK7EJfIlD/wrcDPKMqQP2H+u0yC64o/mi/8njxuhT9NCyI0
q/OAP1/B3L2QqXo/79xspGzbdD/Ryvgf8TxwP17yzibeLGk/3OD4WslwYz/F
0cRG3+tdP8EEwrTT9FY/bxSopc2QUT9mNA78y25EP8WX3RxZmzc//Klgbxkm
Kz/oPrfJkyMfP+31c3kL1xE/uvcud3hzBD+AX51qCnz3PgioN3opC+s+AP7S
1ihC3z4acvXPj16tPl4G8sZ4o34+AQqcEIkFUj63HENh
   "], {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.862313367534107*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"3f851443-3fc3-42c2-9cdb-0e89971ba9e5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Vamos", " ", "agora", " ", "fazer", " ", "o", " ", "plot", " ", "do", 
      " ", "STS", " ", "e", " ", "do", " ", "modelo", " ", "do", " ", "muga", 
      " ", "sobrepostos", " ", "comm", " ", "o", " ", "detector", " ", "na", 
      " ", "posi\[CCedilla]\[ATilde]o", " ", "x"}], " ", "=", " ", "0"}], ",",
     " ", 
    RowBox[{"ambos", " ", "os", " ", "casos", " ", "normalizados"}], ",", " ", 
    RowBox[{
    "para", " ", "verificar", " ", "a", " ", "compatibilidade", " ", "dos", 
     " ", "dois", " ", "modelos"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"sts", "[", 
         RowBox[{"0", ",", "t"}], "]"}], "]"}], "^", "2"}], ",", 
      RowBox[{"dndtnorm", "[", "t", "]"}], ",", 
      RowBox[{"0.8687207449837796", "*", 
       RowBox[{"j0", "[", "t", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "10", ",", "40"}], "}"}], ",", " ", 
    RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.861973343012809*^9, 3.8619734093390865`*^9}, {
   3.8619947017166796`*^9, 3.861994755143035*^9}, {3.862313259150127*^9, 
   3.862313289611964*^9}, {3.862313382088009*^9, 3.862313441787213*^9}, {
   3.8623134748500156`*^9, 3.862313490497777*^9}, {3.862934225147936*^9, 
   3.862934225319141*^9}, 3.862934723053097*^9, {3.8629348960026712`*^9, 
   3.8629348981013694`*^9}, 3.8629349682532578`*^9, {3.862935053336367*^9, 
   3.8629350848964443`*^9}, {3.8629351288493567`*^9, 3.8629351307812395`*^9}},
 CellLabel->"In[47]:=",ExpressionUUID->"ee447023-0a39-4f64-a5f1-92c742dfd199"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
pS3lv49Za8D/AEjw9yQ=
          "]]}, Annotation[#, "Charting`Private`Tag$1006302#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
MP+TNsSb3nlCzqvH7c/1ZH9NaMOB37PZrqX12J3/1NM709rAcbrVpJRRjyuT
noiLLmnDeObv/p7Jeqwbl3xvaoMOuOVdW05HDdgylP9zspIO7Ezf+K19ogGX
XJXVmVJh8c2cl//NN+DlZpxIU9OBP+tlslhXEM5b8SH91NKBQzlH4pX4GvH7
wOehjlgHxp7rvWfTbsSn/NJENCx0oDEkQ3bsQiOOdd9iMBKkA1fpnHXSYk34
b1COhVuIDoTE+U73Szdh/4QdDt9CWfF4Nzz1UWzCDndkz/JG64CiFM0tCTVh
7W96xZCkAzc2jnequDbhyTDXf+UFOpCXIa/HVdmEDbPqGs716IC/U/baF81m
3FKm277hiQ7cHHro+G1PM9ZsfNif0a8DBZsyg+f1m7HUaM9E5Usd8J7tl3to
1YxXpMa3fBzTgVP1R0IaA5pxxZ0NvsbfdCAw12qU524z5uk4IichQQaH8wPq
v7YxsMWr4Q+hO8hQI6jW+VyKgXOmD18dlyQDpZqeeo3IwERBK74iAhlOnrBu
2KzOwDQHsyU5FTJcCmR7fdiQgUN+GbZqU8kwnPG2/Jw/A7fxdJ/LoZMhX8es
5EIQA2+SNND4vY8MIae70yJDGTh7376yB8ZkmF7MU7OMZeB76dQkfSsyzKWY
7rfNZeBpJV0bCw8yGD8sdJ1iMrAaNAne9ySDZv6Bup1tDBxsSe4TOUUGyY+y
PQaPGXhDiDZ67UuGn87W6v5PGXhXlzrBMYQMdZeLBmTHGNjzTc1YWygZyr8t
r1t6z8DVs6QruyPIcI2qN3nvMwMjYVXuyQtkSHD2b900w8C2TooLp5PJEL1W
Eyr8m4ELz1TcepZChvhN+byBqww8FSfvopZOhpQoLdzLxsSBVbLDS9lkuLH+
00OjjUyc/mc383wBGXqjBjVLtzBxT9b2+IRaMgSe+Dz/Wp6Jy0vdDd/VkcGv
PqvmiBITx9ZVb9JqJEPQ9d6cbhUmpg3pJ7xnkoFLyXPkggYTM4VPJ+p0kmFd
z05pxz1MnEdoME7uJoNQQPqWIMTE5zTZeT71kmEpa0wpCphY2yrr0uVnZMjS
Khn01mfi6owHSRMjrPViKrLvHmDiy8UbTfRGydD/d1+TgwkTn64135w2RobY
L10b2A8xscLLieQ9H8kAwZsVJS2YeNMnVdP0z6z41mIbrloy8Zdv5/imvpBB
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
w2WA/wfYrRe4
          "]]}, Annotation[#, "Charting`Private`Tag$1006302#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
2AHr/HGE/wGy/5eY
          "]]}, Annotation[#, "Charting`Private`Tag$1006302#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {10., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{10, 40}, {0., 0.11367104556356879`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"STS", "(", 
         RowBox[{"x", "=", "0"}], ")"}], 
       RowBox[{
         RowBox[{"-", "dN"}], "/", "dt"}], 
       RowBox[{"J", "(", 
         RowBox[{"0", ",", "t"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), Editable -> True, 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.862936144883013*^9, 
  3.8629361565721455`*^9}},ExpressionUUID->"6fe51c00-58f6-4445-ab54-\
5488c7f0a063"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
pS3lv49Za8D/AEjw9yQ=
          "]]}, Annotation[#, "Charting`Private`Tag$350384#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
3TXfyQda+H8AwTBt
          "]]}, Annotation[#, "Charting`Private`Tag$350384#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {10., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {10., 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{10, 40}, {0., 0.11367104556356879`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"STS", "(", 
         RowBox[{"x", "=", "0"}], ")"}], 
       RowBox[{
         RowBox[{"-", "dN"}], "/", "dt"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), Editable -> True, 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.862313837461337*^9, 3.862313848710415*^9}, {
  3.8623146220659046`*^9, 
  3.862314625631084*^9}},ExpressionUUID->"83d7dc36-4528-49eb-b01a-\
a987cf3fc1b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Agora", ",", " ", 
    RowBox[{
     RowBox[{
     "movendo", " ", "o", " ", "detector", " ", "para", " ", "a", " ", 
      "posi\[CCedilla]\[ATilde]o", " ", "x"}], " ", "=", " ", 
     RowBox[{
     "10", " ", "e", " ", "reavaliando", " ", "os", " ", "dois", " ", 
      "juntos", " ", "novamente"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dndtevolve", "[", "t_", "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"E", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"I", "*", "1", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"0.5", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", "60"}], ")"}], "^", "2"}]}], "+", 
                   RowBox[{"2", "*", "1", "*", "t", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "60"}], ")"}]}]}], ")"}]}], "-", 
                RowBox[{"2", "*", "1", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"1", "*", "t"}], "-", 
                   RowBox[{"2", "*", "0.5", "*", "x"}]}], ")"}], "*", 
                 RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", "*", "1", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "*", "t"}], "-", 
                  RowBox[{"2", "*", "I", "*", "0.5", "*", 
                   RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], ")"}]}], 
           "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"I", "*", "1", "*", "t"}], ")"}], "/", "0.5"}], "+", 
                RowBox[{"2", "*", 
                 RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"I", "*", "0.5", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"x", "+", "60"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
                "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "^", "2"}], "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "*", "t"}], "-", 
                    RowBox[{"2", "*", "I", "*", "0.5", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "*", 
              RowBox[{"Erf", "[", 
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"I", "*", "0.5", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", "x"}], "-", 
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "60"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
                  "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "^", "2"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", "t"}], "-", 
                    RowBox[{"2", "*", "I", "*", "0.5", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "/", 
                RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "*", 
                 RowBox[{"(", 
                  RowBox[{"x", "+", "50"}], ")"}]}], "-", 
                RowBox[{"2", "*", "I", "*", "1", "*", 
                 RowBox[{"5", "^", "2"}]}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "*", "I"}], "+", 
                RowBox[{"Erfi", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "*", "x"}], "-", 
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "60"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"1", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", 
                    "0.5"}], "+", 
                    RowBox[{"4", "*", 
                    RowBox[{"5", "^", "2"}]}]}], "]"}]}], ")"}]}], "]"}]}], 
               ")"}]}]}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"5", "^", "2"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", 
              "0.5"}], "+", 
             RowBox[{"4", "*", 
              RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "I"}], ")"}], "*", "1", "*", 
              RowBox[{"(", 
               RowBox[{"x", "+", "60"}], ")"}]}], "-", 
             RowBox[{"2", "*", "1", "*", 
              RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "^", 
       "2"}], "*", 
      RowBox[{"(", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "*", 
          RowBox[{"(", 
           RowBox[{"x", "-", "1"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"I", "*", "1"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}],
        ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.001", ",", "0.999"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8619947607646947`*^9, 3.8619947979834175`*^9}, {
   3.8619959849974937`*^9, 3.8619959880255637`*^9}, {3.862314087077758*^9, 
   3.862314158040547*^9}, 3.862936171725108*^9},
 CellLabel->"In[48]:=",ExpressionUUID->"99dc6471-5202-4581-b258-35e624d7eae1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dn10", "=", 
  RowBox[{
   RowBox[{"FunctionInterpolation", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"-", 
       RowBox[{"dndtevolve", "[", "t", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "10", ",", "70"}], "}"}]}], "]"}], "//", 
   "Quiet"}]}]], "Input",
 CellChangeTimes->{{3.8623141954504786`*^9, 3.862314224018734*^9}, {
  3.862314267531591*^9, 3.8623142741927843`*^9}},
 CellLabel->"In[49]:=",ExpressionUUID->"feea0a14-4dfa-4be6-8817-7bd1077d626c"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA1oYfIgAAJECAG6FYaDeBPeYi6lTK
9CVA+qh7I7Akrj4pj6A0tBMoQPFvkANp7Zs+bjyVuKMOKkD5Ow60FVKfvnJa
V46h/ytA4D8VKQT5rL6pSAURvxouQNg6xtZT6MY+8bv4G/EIMEAm53pQS0b0
Pqe75IWSGTFA8jJPCxME5z68c7cYOyUyQNx+WtiZ1gU/U0ypfeYeM0BJNtCh
tbUmPwMNEbmhLTRA5wzSani2RT817pfGXyo1QJbaP6gqlF8/xocF/SQiNkDx
KBDOUThzP3AJ6Qn6LjdAWRZtW/R3hT+cq+vo0Sk4QGQTy0e9ypM/4jVknrk5
OUDu+fdFHcGgP4Z4w3yoRDpAtnla9ZrLqD+s20Etmj07QLojgDHLKbA/7CY2
tJtLPEACs/Wn94izP62SSQ2gRz1AiTaruEJ3tT+I5tI8tFg+QN7FUgy38bU/
wvJClc9kP0ATgrxRYt60P78P6d92L0BAxRhBRlXQsj8pmmvgDbdAQHT8Wy5i
168/1LT9SaY1QUC2BFzy7wqqP68rA0jCsUFASBTNIOyapD+WlkMxZjhCQNmL
ZdQK054/vpGTgwu2QkA97QmeyNGWP/OAHsE4PkNAa1qh4Q4FkD9XzByT6cND
QLJoqfGjGIY//KcqzptAREAkBU+g+61+P653c/TVx0RAhzrOsP9NdD+h18uD
EUZFQFu2Q5xpQms/w5OXp9DBRUD7mInuPUBiP/JDnrYXSEZA4HXmK7BlVz9i
hLQuYMVGQJYKDk/9rk4/3rgFkjBNR0BkHpylDU1DP5t9Zl4CzEdA1dBkfiDv
OD+Injq/V0hIQMKitsR3MTA/gbNJCzXPSEDBFIXOzzokP7tYaMATTUlAJ1oO
MLcUGj8C8sFgetVJQDKvnQseOBA/eOeOlWRbSkDxP+yCD2EEPy9tazNQ2EpA
sJW6ZiV1+j7z5oK8w19LQH4I+tBcsvA++PCprjjeS0DgNSlVIXHmPixXRDUx
WkxAsnoNzxEL4T5tsRmnseBMQE5W8H+b+9s+75v+gTNeTUByOpTKvVPWPn56
Hkg95k1AV8W7E065xD48tbGiymtOQADsVsi9Ja4+O4BUZlnoTkCECVLjRk+Y
Pkc/MhVwb09ANFtwnJLmej6Tjh8tiO1PQEYlv9XedHQ+9ugjGBQ7UEDBewbN
8wSLPrq48eMlflBAOVbE5RP3mT6eUEdkuLxQQOLcZoqg+qE+iWI62o4AUUC7
+0xrbpOjPpQ8tQTmP1FACoHdtsGNnT4lD7z7/39RQNlE4mWv7WA+a7y5qA==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$1065780#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {10., 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {10., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{10., 70.}, {-8.634543339578576*^-7, 
               0.08571952868330565}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"10.`", ",", "70.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA1oYfIgAAJECAG6FYaDeBPeYi6lTK
9CVA+qh7I7Akrj4pj6A0tBMoQPFvkANp7Zs+bjyVuKMOKkD5Ow60FVKfvnJa
V46h/ytA4D8VKQT5rL6pSAURvxouQNg6xtZT6MY+8bv4G/EIMEAm53pQS0b0
Pqe75IWSGTFA8jJPCxME5z68c7cYOyUyQNx+WtiZ1gU/U0ypfeYeM0BJNtCh
tbUmPwMNEbmhLTRA5wzSani2RT817pfGXyo1QJbaP6gqlF8/xocF/SQiNkDx
KBDOUThzP3AJ6Qn6LjdAWRZtW/R3hT+cq+vo0Sk4QGQTy0e9ypM/4jVknrk5
OUDu+fdFHcGgP4Z4w3yoRDpAtnla9ZrLqD+s20Etmj07QLojgDHLKbA/7CY2
tJtLPEACs/Wn94izP62SSQ2gRz1AiTaruEJ3tT+I5tI8tFg+QN7FUgy38bU/
wvJClc9kP0ATgrxRYt60P78P6d92L0BAxRhBRlXQsj8pmmvgDbdAQHT8Wy5i
168/1LT9SaY1QUC2BFzy7wqqP68rA0jCsUFASBTNIOyapD+WlkMxZjhCQNmL
ZdQK054/vpGTgwu2QkA97QmeyNGWP/OAHsE4PkNAa1qh4Q4FkD9XzByT6cND
QLJoqfGjGIY//KcqzptAREAkBU+g+61+P653c/TVx0RAhzrOsP9NdD+h18uD
EUZFQFu2Q5xpQms/w5OXp9DBRUD7mInuPUBiP/JDnrYXSEZA4HXmK7BlVz9i
hLQuYMVGQJYKDk/9rk4/3rgFkjBNR0BkHpylDU1DP5t9Zl4CzEdA1dBkfiDv
OD+Injq/V0hIQMKitsR3MTA/gbNJCzXPSEDBFIXOzzokP7tYaMATTUlAJ1oO
MLcUGj8C8sFgetVJQDKvnQseOBA/eOeOlWRbSkDxP+yCD2EEPy9tazNQ2EpA
sJW6ZiV1+j7z5oK8w19LQH4I+tBcsvA++PCprjjeS0DgNSlVIXHmPixXRDUx
WkxAsnoNzxEL4T5tsRmnseBMQE5W8H+b+9s+75v+gTNeTUByOpTKvVPWPn56
Hkg95k1AV8W7E065xD48tbGiymtOQADsVsi9Ja4+O4BUZlnoTkCECVLjRk+Y
Pkc/MhVwb09ANFtwnJLmej6Tjh8tiO1PQEYlv9XedHQ+9ugjGBQ7UEDBewbN
8wSLPrq48eMlflBAOVbE5RP3mT6eUEdkuLxQQOLcZoqg+qE+iWI62o4AUUC7
+0xrbpOjPpQ8tQTmP1FACoHdtsGNnT4lD7z7/39RQNlE4mWv7WA+a7y5qA==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$1065780#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {10., 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {10., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{10., 70.}, {-8.634543339578576*^-7, 
               0.08571952868330565}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"10.`", ",", "70.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{10., 70.}}, {
   5, 3, 0, {85}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1:eJw1zztKxEAYwPHRyjKlZQQbG1kf6/sxPtcHyCoIlosg2OkRcoQ9QkrLlJZz
hBxhjpDSUmF+BsIPMmH+37fy+vH0thhCWPh7n8P/sxqLa1wvNhvFerOYONsq
dgzbxSlbDozjYmaz497d4icTqz0ddgz7Omw5MB4U58wcHeqyZ32kz8TqWJ8d
w4k+Ww6Mp/rMXI7O+c45v5m5dGZuvrDhF3v+sD63DxOrC/uwY7i0D1sOjFfm
ZObo2jzsWU/0mTi70bvVYbxzL5t7/z04n/r+GH8BfjVR5A==
   "], CompressedData["
1:eJwBuQJG/SFib1JlAgAAAFUAAAABAAAAe5bG8WNFKT34otGovQ/lPdxx3Dms
WXs+aGfle2KJ7j681/xnKS8FP0IvmbRCFxs/f2SK4zEFMD/uH02yEvQ3P2Br
ds12lUE/JBxFxkpcST/yUpvcKvlRP9gNCSZCDFk/bBnamfEqYT82VXV3uMBu
P2Yqu5Qi6nk/88mg8BGdhD/m/TwoHniJP021dMglDo8/EhMytRaxkj/4onAN
2ziWP9rMA1sWGpo/RZaONU5Nnj/BKuV662OhP4px7+r9vaM/Zmqdgacspj9I
pa4ij6aoP22chC6DIas/1Yypnc6SrT+1TgLolO+vP8GbSeKXFrE/SSZf7cQg
sj8IcszwuBGzP4dJiCtx5bM/Tm7TbZ2YtD9mJz+htCi1P9qw+7gAlLU/XVpY
GaLZtT/ACyr4ivm1PyDwSJZz9LU/ywKkeMjLtT+aHw30k4G1PwMyfnJkGLU/
ntCL1TCTtD8pm5pDPPWzP/3MjYj6QbM/uhGeA/Z8sj90903nt6mxP2ThDFqz
y7A/ybHbomfMrz98wBCjnfitP0a+AyCyIaw/HIf1rr1Mqj/0ljzaPn6oP4Zh
i00WuqY/BILzp4cDpT8uqp8sPl2jPwrOU4pUyaE/6ixm+V5JoD+UAQhdkBKb
P/rPz6TcQZY/3BKhjxkekj/yz25p1TqNP7aLJ5O0Yoc/3SI18h2Sgj+q/6vN
4Et9P886UVLu93Y/kPHn09rocT9IBSnUXstrP+QnK8t7eWU/K+KhmU6HYD9T
O5qPx1tZP6hJKIZ8ZVM/PV0LdySZTT/VcH/X+ohGPyypN++MIEE//cCTGxz/
OT+97fijStotP6iD/XRfGSE/n06izsGTEz/SNVkx828GP65Jrmq8xvk+6PJz
OWe37T4Lg86wAKe7PiOt/brAtow+vlNGHJvtYD75IUsP
   "], {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.862314238331256*^9, 3.8623142900705357`*^9, 
  3.8629361944625483`*^9},
 CellLabel->"Out[49]=",ExpressionUUID->"4dcd19d8-bf5c-42b4-9c49-f56215c6f9dd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "*", 
     RowBox[{"NIntegrate", " ", "[", 
      RowBox[{
       RowBox[{"dn10", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "10", ",", "60"}], "}"}]}], "]"}]}], "\[Equal]", 
    "1"}], ",", "A"}], "]"}]], "Input",
 CellChangeTimes->{{3.86231450769932*^9, 3.8623145142673073`*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"2bf587c8-0167-4c64-8e06-d2f35e3c7376"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"A", "\[Rule]", "1.1707830756759672`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8623145173903627`*^9, 3.8629363134016886`*^9},
 CellLabel->"Out[50]=",ExpressionUUID->"c377a6ab-b708-4a2c-a51d-95034593fa55"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nmais10", "[", "t_", "]"}], ":=", " ", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"I", "*", "1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0.5", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x", "+", "60"}], ")"}], "^", "2"}]}], "+", 
                 RowBox[{"2", "*", "1", "*", "t", "*", 
                  RowBox[{"(", 
                   RowBox[{"-", "60"}], ")"}]}]}], ")"}]}], "-", 
              RowBox[{"2", "*", "1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"1", "*", "t"}], "-", 
                 RowBox[{"2", "*", "0.5", "*", "x"}]}], ")"}], "*", 
               RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", "1", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "*", "t"}], "-", 
                RowBox[{"2", "*", "I", "*", "0.5", "*", 
                 RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], ")"}]}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "Pi"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "4"}], ")"}]}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "*", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"I", "*", "1", "*", "t"}], ")"}], "/", "0.5"}], "+", 
              RowBox[{"2", "*", 
               RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"I", "*", "0.5", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"x", "+", "60"}], ")"}]}], "-", 
                   RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
              "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "^", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "*", "t"}], "-", 
                  RowBox[{"2", "*", "I", "*", "0.5", "*", 
                   RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "*", 
            RowBox[{"Erf", "[", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"I", "*", "0.5", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", "x"}], "-", 
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "60"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
                "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "^", "2"}], "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "*", "t"}], "-", 
                    RowBox[{"2", "*", "I", "*", "0.5", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "/", 
              RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "*", 
               RowBox[{"(", 
                RowBox[{"x", "+", "50"}], ")"}]}], "-", 
              RowBox[{"2", "*", "I", "*", "1", "*", 
               RowBox[{"5", "^", "2"}]}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], "*", "I"}], "+", 
              RowBox[{"Erfi", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "*", "x"}], "-", 
                  RowBox[{"1", "*", 
                   RowBox[{"(", 
                    RowBox[{"-", "60"}], ")"}]}], "-", 
                  RowBox[{"2", "*", "I", "*", "1", "*", 
                   RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"1", "*", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", 
                    "0.5"}], "+", 
                    RowBox[{"4", "*", 
                    RowBox[{"5", "^", "2"}]}]}], "]"}]}], ")"}]}], "]"}]}], 
             ")"}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"5", "^", "2"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "4"}], ")"}]}], "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", "0.5"}],
            "+", 
           RowBox[{"4", "*", 
            RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "*", "1", "*", 
            RowBox[{"(", 
             RowBox[{"x", "+", "60"}], ")"}]}], "-", 
           RowBox[{"2", "*", "1", "*", 
            RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "^", "2"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8629363451130724`*^9, 3.8629363638595953`*^9}, {
  3.8629366171432924`*^9, 3.8629366225916157`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"2cddb378-2867-45c5-a5c6-e36207d27dc2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dwelltime", " ", "=", " ", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"nmais10", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.862936388980748*^9, 3.8629363889917006`*^9}, {
   3.86293654386196*^9, 3.8629365499825335`*^9}, 3.862936614421423*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"6d805a56-da61-4b0c-a61a-1ecb1d2b402f"],

Cell[BoxData["8.066100315906551`*^-29"], "Output",
 CellChangeTimes->{3.86293639236119*^9, 3.862936555340165*^9, 
  3.8629366315234766`*^9},
 CellLabel->"Out[60]=",ExpressionUUID->"947138c2-ec8d-4934-aa13-7fb5c4d40d04"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"j10", "[", "t_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"dn10", "[", 
    RowBox[{"t", "+", "0.62"}], "]"}], " ", "+", " ", "dwelltime", 
   " "}]}]], "Input",
 CellChangeTimes->{{3.8629364391197567`*^9, 3.862936449578416*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"94b89137-184b-4047-aa4c-34c5461bf4a7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "*", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"j10", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "10", ",", "50"}], "}"}]}], "]"}]}], " ", "==", " ",
     "1"}], ",", "A"}], "]"}]], "Input",
 CellChangeTimes->{3.862936479744621*^9},
 CellLabel->"In[54]:=",ExpressionUUID->"872ddb19-70a2-4eb1-94da-be2ae57dc1c6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"A", "\[Rule]", "1.1710944640735108`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8629364805015097`*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"066b1d97-0bce-4ff1-afac-230e694c964c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"sts", "[", 
        RowBox[{"10", ",", "t"}], "]"}], "]"}], "^", "2"}], ",", 
     RowBox[{
      RowBox[{"dn10", "[", "t", "]"}], "*", "1.1797830756759672"}], ",", " ", 
     RowBox[{"1.1710944640735108", "*", 
      RowBox[{"j10", "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "15", ",", "50"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.862314259441914*^9, 3.8623143145344734`*^9}, {
  3.862314527908128*^9, 3.8623145566262193`*^9}, {3.8629364904323015`*^9, 
  3.8629365105342226`*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"ae8fb1f5-5560-4f05-b8cd-9b3c8d0b1f09"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
B12ThP8BB5cOlg==
          "]]}, Annotation[#, "Charting`Private`Tag$1195454#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
vMNexlZZHv4HruLwog==
          "]]}, Annotation[#, "Charting`Private`Tag$1195454#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwdV3c8le/7l2RVEkkRkjR1HMfmnOe64qyQbGWUESFERpFklIZkNOwRkVGK
rGOljbZSfSojCdlkJ37n+/vnnNf7dd/Pdd3vcT2v55Z3OmbmwsvDw3OL+/O/
/57CaUkeHhI6MLsmLRumCOXb68TPLCMh3wHTD9o/p4iTOdoiC8IklJTxdbDi
myYaMm2ETouSMK9W0L5EYZoQSjvFNy9BwneOHRdMdk8TZklpi8HSJMzUqM3R
tp8mUq7Vzc1uJOEmF1ev4yemCaWYxdHpnSS8cwJW9OdNEwEXNw4GqpDw/b15
B7XaaaL+3O7eSQ0Szv7Ocf71dprgj3Dq8qeSUMNk/gNv1zSxLzSy7c9uEt5c
8do3YXyaSAq+9eU4i4SsPW3zyUtmiM7AZx/GjEioTZ5Qk1s1Q2z363njY0bC
+IEv/22VniGOHxNoHrEm4cFcsyKO4gxRc3TbM297Et4/v839K2mG4HPb0zDk
RMK0WvkPsRozhNFhjxpPNxKqeS8r6KDOENcdoisGvEgY8zyl8O3uGaLd7k6J
hx8JOSP5iS6MGWLLgdd3fp8kYaP4tPJt1gxxzHL4tlsoCd/YGammsGeIKtNV
Ob2RJOycOOZI5+IlxuQM14skXMW/PbiIOUMYGJgm/7pCQs9qgtaqP0MkMI9f
O3yNhCLUkx4vYIb4pnc19mcyCXnL0x6d15khNkPZJadMrn/7/Hg3qM0Qnrqt
537c4vJXfzJ4UWmGKNecCnMoJGF6nDl+VpghFlQlQzrukTA7eqBWSGqGYJG1
ThwsJ6GNidmmrVy94pQOHG+rJuEnwX1k9aUzxJdtwV52DSTc1ZGfpz01Tcgr
prp9e8Y9378tDJ2+acJDvtbZ5iU3DzFxL6n/TROlMm0H/3tHwmnOnVlm0zRB
Xytn+fkbCVfErje6yPU7RgxNrH6Q8G/0zMirq9PEJxFHw9YeEuq/ztNRDpsm
jgjk7P4wRkLNZzFPXK2miUszW0hvBZQxdrNxut7sFPFhgrXdeKUyurQf893Q
OUVsGHPb/FpMGTfvSunXez5F3P1dKPVSRhnfqSi+vBw3Rbz7ShJ4oaqMN3zb
iHKZKUKiTqOz/pAypqZKP3SQmyQODluqlbko40UDtw9tcxNEnlzAhYKjyugm
UNc00TpBaEU8IF87oYzOcrkFK6MnCBsWOdw9lrt/JsSsauwPkfF++6Y1D5Wx
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
hY8tdybO6mmhgccEvfd5FiSd6posG9dC6T1vq0hpeWD5tH3t/RJtnO/ojl1z
4i70Oq9S3eWlg5mGZ3n1JUqB9EEhve+YDv5rc/SzkC+FQD0tgVvHddB6UFjL
cVcp8Mk7fpM6qYM7bHNOeTJKYVN7aaRgpA5qX9+2mR1QCnb7rT7+TNJB8jGB
I3wfS6HFKD0g5akOZtnufrQp5gGsry3psHyhgyIvdFhnkh6Aw87ne1Y362D3
U9r21pwHMCI0InPhrQ7yB1U/8ax+ACte4POArzpY+5IvZ0/vA2Dt7l5rOqqD
jfd9z+VDGdSq76wS2KCLW9msezn9ZRD5sN54QVYXnafTU0cmy8Bgj9mvCXld
1Da4fUNlSTn8Zxck1rVVF+WqN/gmSpbDVOQLz1pVXeRN6/vWq18O5BZneV9D
Xbx6Z+2NiynlkOOddulrsC5qaT3SCoUK8JhRln9/WhcPp/XxH91TAZSIJ5Uv
wnRRJETih6F5BTRc7+8ui9LFGOvgjb2uFfC9VgtiE3TR25PlGB1TAWuXt/7R
L9TFn166NuFfKuDS7ZX2d//TRUFr76KnhytBqp3u7vtdF4V18p0velZC4ZqQ
APUOXdxTXmuq518JL8P7Y+q6dfG0kOG9uMhKWGH3ov71iC626H68knGzEq6I
hm8cXkbFDgfTTye+VYIsq0qpVJCKszTq1pCuSig+PaIVuJyKNgL7d/n/roS3
/famC6JUnPszrQXTlSD6TIf7aUHFGtZ9TxSrgoSgiZ8kChX3OJAGOxhVsOn+
ztFxNSpmBHckShlVQWmP03yFJhVf3Lx3iW1WBR/M368BGhX3D04rhx6sgjWk
YsY+NhW9DdR+7AusghtdR24fO8jd318teyGnCrasz3yg6kjF9e3yJRP5VVCx
79PDaWcqblb/oGpRXAWfa+lfzrhTUar70MRAVRWsS5QXivOnotc8iIe8roJU
w28e9y9Rscd2pYTURBXcSYvPuRdDxQ/upG/is1VQO8T6XhxHxUb2b76Ff1Xw
PbZs790bVOz3Fg/IEeDAho8x5MJsKv636pILRYoDSop094JcKn490PyrWJYD
1MC5m/n5VJQ9dPyutAIH7NcdEb9dTMX4uE6+5zs5kGGHUznVVOzVi/K1p3Kg
+O4UKaeOih+lLJttkQP1C3eOZDdQEZMOGBvQOdCetf6/rOdU/L5qm+ikIQfk
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
uxPVgbLAkuCdW1xko6PTxTujRrLwfyIrS08=
          "]]}, Annotation[#, "Charting`Private`Tag$1195454#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {15., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {15., 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{15, 50}, {0., 0.1031421250443423}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"STS", "(", 
         RowBox[{"x", "=", "10"}], ")"}], 
       RowBox[{
         RowBox[{"-", "dN"}], "/", "dt"}], 
       RowBox[{"J", "(", 
         RowBox[{"10", ",", "t"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), Editable -> True, 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.862936669562209*^9, 3.8629366738537006`*^9}, {
  3.862936747297833*^9, 
  3.8629367690810547`*^9}},ExpressionUUID->"6c22ee77-f53f-4ada-aa4a-\
d9103ecfe0b8"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
B12ThP8BB5cOlg==
          "]]}, Annotation[#, "Charting`Private`Tag$526798#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
vMNexlZZHv4HruLwog==
          "]]}, Annotation[#, "Charting`Private`Tag$526798#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {15., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {15., 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{15, 50}, {0., 0.1031421250443423}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"STS", "(", 
         RowBox[{"x", "=", "10"}], ")"}], 
       RowBox[{
         RowBox[{"-", "dN"}], "/", "dt"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), Editable -> True, 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.862314599392126*^9, 
  3.8623146159297204`*^9}},ExpressionUUID->"17041662-fa50-411f-98a7-\
3111d71b5345"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Atendendo", " ", "a", " ", "pedidos", " ", "antigos", " ", "de", " ", 
     "eduardo"}], ",", " ", 
    RowBox[{
     RowBox[{
     "fazendo", " ", "mais", " ", "uma", " ", "vez", " ", "o", " ", 
      "gr\[AAcute]fico", " ", "agora", " ", "para", " ", "x"}], "=", "20"}]}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"dndtevolve2", "[", "t_", "]"}], ":=", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"E", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"I", "*", "1", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"0.5", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "+", "70"}], ")"}], "^", "2"}]}], "+", 
                   RowBox[{"2", "*", "1", "*", "t", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "70"}], ")"}]}]}], ")"}]}], "-", 
                RowBox[{"2", "*", "1", "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"1", "*", "t"}], "-", 
                   RowBox[{"2", "*", "0.5", "*", "x"}]}], ")"}], "*", 
                 RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"2", "*", "1", "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "*", "t"}], "-", 
                  RowBox[{"2", "*", "I", "*", "0.5", "*", 
                   RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], ")"}]}], 
           "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", "Pi"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"I", "*", "1", "*", "t"}], ")"}], "/", "0.5"}], "+", 
                RowBox[{"2", "*", 
                 RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"I", "*", "0.5", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"x", "+", "70"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
                "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "^", "2"}], "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "*", "t"}], "-", 
                    RowBox[{"2", "*", "I", "*", "0.5", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "*", 
              RowBox[{"Erf", "[", 
               RowBox[{
                RowBox[{"Sqrt", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"I", "*", "0.5", "*", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", "x"}], "-", 
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "70"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
                  "/", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "^", "2"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", "t"}], "-", 
                    RowBox[{"2", "*", "I", "*", "0.5", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "/", 
                RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "*", 
                 RowBox[{"(", 
                  RowBox[{"x", "+", "70"}], ")"}]}], "-", 
                RowBox[{"2", "*", "I", "*", "1", "*", 
                 RowBox[{"5", "^", "2"}]}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "*", "I"}], "+", 
                RowBox[{"Erfi", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "*", "x"}], "-", 
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "70"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"1", "*", 
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", 
                    "0.5"}], "+", 
                    RowBox[{"4", "*", 
                    RowBox[{"5", "^", "2"}]}]}], "]"}]}], ")"}]}], "]"}]}], 
               ")"}]}]}], ")"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"5", "^", "2"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}], "*", 
           RowBox[{"Sqrt", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", 
              "0.5"}], "+", 
             RowBox[{"4", "*", 
              RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"-", "I"}], ")"}], "*", "1", "*", 
              RowBox[{"(", 
               RowBox[{"x", "+", "70"}], ")"}]}], "-", 
             RowBox[{"2", "*", "1", "*", 
              RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "^", 
       "2"}], "*", 
      RowBox[{"(", 
       RowBox[{"2", "/", 
        RowBox[{"(", 
         RowBox[{"1", "*", 
          RowBox[{"(", 
           RowBox[{"x", "-", "1"}], ")"}], "*", 
          RowBox[{"(", 
           RowBox[{"x", "+", 
            RowBox[{"(", 
             RowBox[{"1", "/", 
              RowBox[{"(", 
               RowBox[{"1", "+", 
                RowBox[{"I", "*", "1"}]}], ")"}]}], ")"}]}], ")"}]}], ")"}]}],
        ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0.001", ",", "0.999"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8623152344554567`*^9, 3.8623153090285864`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"edc4735f-84a4-47c4-ab31-e7fbaf5e1566"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dn20", "=", 
  RowBox[{
   RowBox[{"FunctionInterpolation", "[", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"-", 
       RowBox[{"dndtevolve2", "[", "t", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "15", ",", "75"}], "}"}]}], "]"}], "//", 
   "Quiet"}]}]], "Input",
 CellChangeTimes->{{3.862315330947748*^9, 3.862315375662219*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"a0c95435-b4ea-440f-8be5-770c24cfcd55"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["InterpolatingFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquarePlusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA1oYfIgAALkBgwOUeIImQPeYi6lTK
9C9AaVEiQewLJz6UR1Aa2gkxQCD/VPLTHSe+N55K3FEHMkBAk29Rkx8svjmt
K8fQ/zJAd+TsUG0hhT5UpIKIXw00QHRl6bRIp7g+8bv4G/EINUDvWcMYyDji
Pqe75IWSGTZAfWyr4H8SCT+8c7cYOyU3QGkS70JuBCs/U0ypfeYeOEBsljMX
oehFPwMNEbmhLTlAcQYl9Np4YD817pfGXyo6QNCS/8TNvnM/xocF/SQiO0C4
dKobLGmEP3AJ6Qn6LjxACjqDPtKkkz+cq+vo0Sk9QGfbhM0mJ6A/4jVknrk5
PkDsrJ+Cs8SoP4Z4w3yoRD9AiEcEnasDsT/W7aAWzR5AQDTy6+UnFbU/dhMb
2s2lQEAKwYIqf424P1fJpAbQI0FALn2zIeZ0uj9Ec2keWqxBQJynxjHf3Lo/
YXmhymcyQkBRHIXbLbO5P78P6d92r0JAofToWEyHtz8pmmvgDTdDQI7nrh9M
brQ/1LT9Saa1Q0AzAfLo/T2xP68rA0jCMURAOohv6h1MrD+WlkMxZrhEQFKu
J2wUI6Y/vpGTgws2RUDcyzWWqyihP/OAHsE4vkVAI8VD+3FpmT9XzByT6UNG
QMWVghHmhJI//KcqzpvARkBYh2cwwR6LP653c/TVR0dAUf33UzELgz+h18uD
EcZHQBUCCn6nCns/w5OXp9BBSEBIs0inICNzP/JDnrYXyEhA3t15vFkOaj9i
hLQuYEVJQKVkOR2EEWI/3rgFkjDNSUBy/zTSJSRYP5t9Zl4CTEpA8bF9nLl7
UD+Injq/V8hKQMPw/tfTl0Y/gbNJCzVPS0AMTi0NEOU9P7tYaMATzUtAVNCn
AAtNND8C8sFgelVMQF/Shnv9qyo/eOeOlWTbTECPtOLwR6chPy9tazNQWE1A
Y5jvDc8HGD/z5oK8w99NQHiN1IMoow8/+PCprjheTkByanG8dk4FPyxXRDUx
2k5A4ZzeH84D/T5tsRmnsWBPQISGocc0dfM+75v+gTPeT0AVxPFCWivqPj89
D6QeM1BAaYFxumGr4T6e2lhR5XVQQBbDbsVGjNc+HUAqsyy0UEBiidOnKkLQ
PqIfmQq491BArPQCUMc0xj5Ix48WxDZRQCji3P16Z74+9OgjGBR7UUCfiD0b
evK0Pri48eMlvlFAAAsEF1xArD6cUEdkuPxRQG1RNfeB66M+h2I62o5AUkBz
1a5KsnmcPpI8tQTmf1JAeqpn3c8flT4lD7z7/79SQCaRLgrExIs+DEmzeQ==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$1256984#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {15., 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {15., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{15., 75.}, {-3.273987868561705*^-9, 
               0.10493273701891187`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"15.`", ",", "75.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource[
               "FEBitmaps", "SquareMinusIconMedium"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 3.5 CurrentValue["FontCapHeight"]/
                AbsoluteCurrentValue[Magnification]}]], 
            GraphicsBox[{{{{}, {}, 
                TagBox[{
                  Directive[
                   Opacity[1.], 
                   RGBColor[0.368417, 0.506779, 0.709798], 
                   AbsoluteThickness[1]], 
                  LineBox[CompressedData["
1:eJwB0QMu/CFib1JlAgAAADwAAAACAAAA1oYfIgAALkBgwOUeIImQPeYi6lTK
9C9AaVEiQewLJz6UR1Aa2gkxQCD/VPLTHSe+N55K3FEHMkBAk29Rkx8svjmt
K8fQ/zJAd+TsUG0hhT5UpIKIXw00QHRl6bRIp7g+8bv4G/EINUDvWcMYyDji
Pqe75IWSGTZAfWyr4H8SCT+8c7cYOyU3QGkS70JuBCs/U0ypfeYeOEBsljMX
oehFPwMNEbmhLTlAcQYl9Np4YD817pfGXyo6QNCS/8TNvnM/xocF/SQiO0C4
dKobLGmEP3AJ6Qn6LjxACjqDPtKkkz+cq+vo0Sk9QGfbhM0mJ6A/4jVknrk5
PkDsrJ+Cs8SoP4Z4w3yoRD9AiEcEnasDsT/W7aAWzR5AQDTy6+UnFbU/dhMb
2s2lQEAKwYIqf424P1fJpAbQI0FALn2zIeZ0uj9Ec2keWqxBQJynxjHf3Lo/
YXmhymcyQkBRHIXbLbO5P78P6d92r0JAofToWEyHtz8pmmvgDTdDQI7nrh9M
brQ/1LT9Saa1Q0AzAfLo/T2xP68rA0jCMURAOohv6h1MrD+WlkMxZrhEQFKu
J2wUI6Y/vpGTgws2RUDcyzWWqyihP/OAHsE4vkVAI8VD+3FpmT9XzByT6UNG
QMWVghHmhJI//KcqzpvARkBYh2cwwR6LP653c/TVR0dAUf33UzELgz+h18uD
EcZHQBUCCn6nCns/w5OXp9BBSEBIs0inICNzP/JDnrYXyEhA3t15vFkOaj9i
hLQuYEVJQKVkOR2EEWI/3rgFkjDNSUBy/zTSJSRYP5t9Zl4CTEpA8bF9nLl7
UD+Injq/V8hKQMPw/tfTl0Y/gbNJCzVPS0AMTi0NEOU9P7tYaMATzUtAVNCn
AAtNND8C8sFgelVMQF/Shnv9qyo/eOeOlWTbTECPtOLwR6chPy9tazNQWE1A
Y5jvDc8HGD/z5oK8w99NQHiN1IMoow8/+PCprjheTkByanG8dk4FPyxXRDUx
2k5A4ZzeH84D/T5tsRmnsWBPQISGocc0dfM+75v+gTPeT0AVxPFCWivqPj89
D6QeM1BAaYFxumGr4T6e2lhR5XVQQBbDbsVGjNc+HUAqsyy0UEBiidOnKkLQ
PqIfmQq491BArPQCUMc0xj5Ix48WxDZRQCji3P16Z74+9OgjGBR7UUCfiD0b
evK0Pri48eMlvlFAAAsEF1xArD6cUEdkuPxRQG1RNfeB66M+h2I62o5AUkBz
1a5KsnmcPpI8tQTmf1JAeqpn3c8flT4lD7z7/79SQCaRLgrExIs+DEmzeQ==

                   "]]}, 
                 Annotation[#, "Charting`Private`Tag$1256984#1"]& ]}}, {}}, {
             DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
              AxesOrigin -> {15., 0}, FrameTicks -> {{{}, {}}, {{}, {}}}, 
              GridLines -> {None, None}, DisplayFunction -> Identity, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, PlotRangeClipping -> True, ImagePadding -> 
              All, DisplayFunction -> Identity, AspectRatio -> 1, 
              Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {15., 0}, DisplayFunction :> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], 
              FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, GridLinesStyle -> Directive[
                GrayLevel[0.5, 0.4]], ImageSize -> 
              Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}], 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "DefaultMeshStyle" -> AbsolutePointSize[6], 
                "ScalingFunctions" -> None, 
                "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, 
              PlotRange -> {{15., 75.}, {-3.273987868561705*^-9, 
               0.10493273701891187`}}, PlotRangeClipping -> True, 
              PlotRangePadding -> {{
                 Scaled[0.1], 
                 Scaled[0.1]}, {
                 Scaled[0.1], 
                 Scaled[0.1]}}, Ticks -> {Automatic, Automatic}}], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Domain: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  RowBox[{"{", 
                    RowBox[{"{", 
                    RowBox[{"15.`", ",", "75.`"}], "}"}], "}"}], 
                  "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Output: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"scalar\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Order: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["3", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Hermite\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Periodic: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["False", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Rows" -> {{Top}}}, AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  InterpolatingFunction[{{15., 75.}}, {
   5, 3, 0, {85}, {4}, 0, 0, 0, 0, Automatic, {}, {}, False}, CompressedData["
1:eJw1zjlKxVAYBeCrlWVKy9hZSZxnvQ7PeXgGBMsgCHZaWmYJbwkpLVNaZgkp
LbOEtwTF+xkIH1w4/zkLz2/ly2wIYeb3fwz/31L8IxbJejnZrSSr1WRYSzaM
68mB9UYy35RntSW/Lc+4k5xwYLHrHnvme8l3dsz29bBlONDHeKiH89E7Xznh
FwfOHdnHJ9b8ZM/82F52zE7sZctvhtPkIsf8YMMp48huDizO7GPP/Nwudswu
7GLLcGkHG04Zr/SyvtZz4z6rW/fu5O45lmf9IF/Kl/EH4bhSqg==
   "], CompressedData["
1:eJwBuQJG/SFib1JlAgAAAFUAAAABAAAASPU4JwxxkD2CvvaJUIznPfCsFwec
2jU+mrJmcBroej6sBYZ0Tc+ZPpYjRu/mkrY+95LM+nQR0j75dEz3U5HqPvx5
bkg1AgI/Obu4JbmXFj8y8EK/ZlMqPzCyESpkmDw/Hc7VuIcOTT+scu8CgLdb
P5Nrz+4J52g/hgNbd4skdT8IBaHquv96P9GYikQsBIE/lchXST8uhT8Oo/5Q
IQuKP7q4sJkHpY8/eDnX0UIBkz+SEtlM6pKWP2TXS0cdhpo/IkBTR87Wnj/e
T7IYEb+hPxdwAQM4OaQ/ls/Xaa/Tpj83/s7Z5kqsP7NdE9IV77A/cKaO4eGe
sz/KW4dPeOC0P8reft/UDLY/JFlWW6sftz/q3hAYMRW4P4rseUkz6rg/KpGV
byecuT9pDL2WNSm6P5tDRnE8kLo/UvKAl8/Quj9GPIZ1MOu6P+6cyptC4Lo/
fuazRnyxuj/0AjtXrPC5Px5PrP0Dvbg/Durr+tcutz92fdU0AWC1PzLSUiyu
abM/tK4Ea7tisT9xRTTBQV+wP64FpJ0+va4/RJDrtEjFrD8IKhgkwNmqP/6e
xy1E/ag/wCoRRvoxpz9yoVrMXNWjP3MzRba2zKA/JmbNp702nD8yJMER2ICX
P4nyC1C9b5M/tlfY0Z7ujz8/oHtCERKKPzDAuDKrKoU/AtmOky4ZgT+OLsMp
XX97PzKUChDuBHY/efTJthuRcT+dx420oO9rP/yqE4CkJWY/wcjUrfKCYT9U
MbVP5aBbPzh+F3BWwFU/ijK8lDgYUT/y+dFAYwdFPxDp3qmHwzk/x+9WlPx8
Lz8MXd0LAzkjP5rudBaDeRc/KklbMwi0DD9CzZqcGp31PiMFghW5guA++NNX
UZ2yyT7Jra/kFG+0PgLVnNa+oqA+bY9T9cLEiz7KUEM6
   "], {Automatic}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.8623153898844748`*^9, 3.862936792138727*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"ef42b3a7-0c83-4830-8235-4ed0d3e5cc6e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "*", 
     RowBox[{"NIntegrate", " ", "[", 
      RowBox[{
       RowBox[{"dn20", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "15", ",", "70"}], "}"}]}], "]"}]}], "\[Equal]", 
    "1"}], ",", "A"}], "]"}]], "Input",
 CellChangeTimes->{{3.862315396586009*^9, 3.8623154057045927`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"e3a19485-42c5-4ddf-a022-afe5b2c2782f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"A", "\[Rule]", "0.8687169119170634`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8623154097705193`*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"91177b57-51fa-4d46-a819-b7f882e1adf0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"nmais20", "[", "t_", "]"}], ":=", " ", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Abs", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"E", "^", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"I", "*", "1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"0.5", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x", "+", "70"}], ")"}], "^", "2"}]}], "+", 
                 RowBox[{"2", "*", "1", "*", "t", "*", 
                  RowBox[{"(", 
                   RowBox[{"-", "70"}], ")"}]}]}], ")"}]}], "-", 
              RowBox[{"2", "*", "1", "*", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"1", "*", "t"}], "-", 
                 RowBox[{"2", "*", "0.5", "*", "x"}]}], ")"}], "*", 
               RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
            RowBox[{"(", 
             RowBox[{"2", "*", "1", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "*", "t"}], "-", 
                RowBox[{"2", "*", "I", "*", "0.5", "*", 
                 RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], ")"}]}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"2", "*", "Pi"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "4"}], ")"}]}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"1", "*", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"I", "*", "1", "*", "t"}], ")"}], "/", "0.5"}], "+", 
              RowBox[{"2", "*", 
               RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
            RowBox[{"Sqrt", "[", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"I", "*", "0.5", "*", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"x", "+", "70"}], ")"}]}], "-", 
                   RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
              "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"1", "^", "2"}], "*", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "*", "t"}], "-", 
                  RowBox[{"2", "*", "I", "*", "0.5", "*", 
                   RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "*", 
            RowBox[{"Erf", "[", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"I", "*", "0.5", "*", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "*", "x"}], "-", 
                    RowBox[{"1", "*", 
                    RowBox[{"(", 
                    RowBox[{"-", "70"}], ")"}]}], "-", 
                    RowBox[{"2", "*", "I", "*", "1", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}], "^", "2"}]}], ")"}], 
                "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "^", "2"}], "*", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"1", "*", "t"}], "-", 
                    RowBox[{"2", "*", "I", "*", "0.5", "*", 
                    RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "/", 
              RowBox[{"Sqrt", "[", "2", "]"}]}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"1", "*", 
               RowBox[{"(", 
                RowBox[{"x", "+", "70"}], ")"}]}], "-", 
              RowBox[{"2", "*", "I", "*", "1", "*", 
               RowBox[{"5", "^", "2"}]}]}], ")"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], "*", "I"}], "+", 
              RowBox[{"Erfi", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"1", "*", "x"}], "-", 
                  RowBox[{"1", "*", 
                   RowBox[{"(", 
                    RowBox[{"-", "70"}], ")"}]}], "-", 
                  RowBox[{"2", "*", "I", "*", "1", "*", 
                   RowBox[{"5", "^", "2"}]}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"1", "*", 
                  RowBox[{"Sqrt", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", 
                    "0.5"}], "+", 
                    RowBox[{"4", "*", 
                    RowBox[{"5", "^", "2"}]}]}], "]"}]}], ")"}]}], "]"}]}], 
             ")"}]}]}], ")"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"5", "^", "2"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"1", "/", "4"}], ")"}]}], "*", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "*", "I", "*", "1", "*", "t"}], ")"}], "/", "0.5"}],
            "+", 
           RowBox[{"4", "*", 
            RowBox[{"5", "^", "2"}]}]}], "]"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"-", "I"}], ")"}], "*", "1", "*", 
            RowBox[{"(", 
             RowBox[{"x", "+", "70"}], ")"}]}], "-", 
           RowBox[{"2", "*", "1", "*", 
            RowBox[{"5", "^", "2"}]}]}], ")"}]}], ")"}]}], "]"}], "^", "2"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8629369533515167`*^9, 3.8629369696389627`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"e48d0d54-1c8a-45cf-bd2f-4c39d01c9e93"],

Cell[BoxData[
 RowBox[{"dwelltime", " ", "=", " ", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"nmais20", "[", "t", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], " "}]], "Input",
 CellChangeTimes->{{3.8629370469059973`*^9, 3.8629370469187307`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"0496d1b8-ae16-4545-b7b0-713974334dfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"j20", "[", "t_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"dn20", "[", 
    RowBox[{"t", "+", "0.62"}], "]"}], " ", "+", " ", "dwelltime", 
   " "}]}]], "Input",
 CellChangeTimes->{{3.862937129817752*^9, 3.862937133471794*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"aad3cb81-e509-4e74-bcfe-164a7ae6fe50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"A", "*", " ", 
     RowBox[{"NIntegrate", "[", 
      RowBox[{
       RowBox[{"j20", "[", "t", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "10", ",", "50"}], "}"}]}], "]"}]}], " ", "==", " ",
     "1"}], ",", "A"}], "]"}]], "Input",
 CellChangeTimes->{{3.862937543860366*^9, 3.8629375438980775`*^9}},
 CellLabel->"In[71]:=",ExpressionUUID->"44ca4668-f6c4-43aa-90fd-e59940c65c79"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"A", "\[Rule]", "0.872916100664042`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.862937343629173*^9, 3.8629375504197297`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"477a1ca9-68d8-410e-b205-a9d6a8ec407b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"sts", "[", 
        RowBox[{"20", ",", "t"}], "]"}], "]"}], "^", "2"}], ",", 
     RowBox[{
      RowBox[{"dn20", "[", "t", "]"}], "*", "0.8787169119170634"}], ",", " ", 
     RowBox[{"0.872916100664042", "*", 
      RowBox[{"j20", "[", "t", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "20", ",", "55"}], "}"}], ",", " ", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.862315458293126*^9, 3.862315501262473*^9}, {
   3.8623155883991923`*^9, 3.8623155884072113`*^9}, {3.8629371528369207`*^9, 
   3.86293716715701*^9}, {3.8629373534396696`*^9, 3.8629373552996907`*^9}, 
   3.862937431339285*^9, {3.862937557608409*^9, 3.862937561579381*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"e00d7e1f-41ef-4022-a565-40d59e2fca52"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9+9ipAma1U5oTmdvhf8BNQCzNQ==
          "]]}, Annotation[#, "Charting`Private`Tag$1387539#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3k4VO8bxlHZkiyRaFG28i2RGTOW5nmOZcyMJfuWLcpSSNbKvhcSISWV
UlqUsg4hJUq2kKVkKakkJZGE6je/f865PtfM9Z73uZ/7ft5zNrsdtjjAw8XF
tYtz+f89sHdxJRcXCduGQz15+8po5yxTT9bzkFCrcvviebVyWm3Xer6oFSR0
js3MOnq6nLa8YzfPX0ESmjkl7rW3qKCdfRo1vyhBwtA3Pi+Oz1XSHuiLhNRI
kfCu5AZFqgebNtKQP3NchoS01ZdONL1i07bWP/72W5aECxc2z555WkWrZi/7
8Os/Eqa9y114/vQBbZic5cZWIeHDJzoGr01raDzl8m9D1EjI/K/jyu6BGhrr
vsGbnxokVJvqEGcs1tIGbyZ1zRAk/MdX7k/2qqdxKUntKdMnYdfnjf4uvI9o
CtdvtgUYkrB8bkI9w+ERze/K82fTxiS0oMhuHuJ/TPt3fuXDKVsSDu6qcPwX
0UCTl8rTvudAQrGd3pD9toHGOLu92s+JhPRK9RIHgye09DMm5V/dSKgslRWX
LdFI25Jy+vYXXxK+5KcWl3U10QzCxXM+xZFwb0aN/6v657SDCwVrbiSS0Gdj
/Q9jZgst7SjpjMdJEj7/+0sgpLeF1hdkfepDGglFfDI0+eZaaV6+OXHvz5Nw
ol/KS9i+g5biLOM/co+ERyo7OqUyumiqv5SlB0pJeGd1q/Lx8S5az2mtxp4K
Et4YW1H3leimrX9sL9VSQ8JFn7xpncVuWrHcuUflz0j4cVTscO+JHppF7Y2D
91pIeJD3ufOWHz20OSv2mtvtJHQMO2E95tRLg8Q+r8svSRjVeKJ+XqeP1jm+
RjR5hIRHH1rZ10m/ogXFyNfEj5Jw1k7GWuj8K5qUNOlA1AcS+ktXKqpLv6bt
M7KsDvpCwv0R7aWaCgO0H3cz9rn84vTjLlM33mWQtiZQuJS0moyPky2/fWO/
pVWt3Oi4U4yMXebPtz0QeUdzvLaDV1mCjDPcsxutDr2jXe81dtgkw+Fu6Qkh
xVGaBjWFR1CJjEI7Mr7SSt/T7P7wWY7QyLjanzq/8r9PtKXstX9eE2RsCBx6
knLhEy1fRelGjz4ZGYWs92YC47TPLvTF5ywyfqWLqJV8Gacdb4gvKLfh/H5U
NlmzfYKWl8Q9e9KPjPn31hAfhKdoAu3l4hZHyLjnigedK3eKFiLmpS4dRMaV
MW7hI+LfaeYXOwJuHyNje5qg6K3r32m8ZRemW+LJaHAy1uHP62la0LypaGYS
GXcedN56T/kH7d1uHrW9yWRcSFNJHgr/Qatt9vL/cpqM72+7eTUpzNCODJOn
Vl4g47yNjKJt8ixtWO6zcM9Fznpxucpxn2Zpxt55Knn5ZFTkCo+2of+kKc7y
+G0vJOP26fVR/AJztEGBzknjEjKqDvU77yz4RaOTD06cekZGJaq2K3nnIq3s
+AZBmxYyrle0yLK9tUiTfdS5bWM7Gd0jbmSFKCzRFlkU7+JuMlr6Ndo9kvtD
u++6fLxjiIxO8c0JUpr/aBsL2Xw5b8nYyWz/cvDxP1rKl4NKLu/J+Fk01+Le
Zi7wCOnymBonY1Fg5f3ZQi6QSb30YfUsGSX/VW+zreeGE13mK17NkXFXo5uJ
Pz8PzEmuUMj/zennAX7qMwse6LxyaL/qPzLG8ctv0vvCA4ls6nszQQ18F53h
vHz7cvg+2v02Q1YD1WImpsnTvFD1O4DfWE4DGbL0tkpTPogREVflVdTAgT1t
lVV3+UCMZhl1/D8NXLV3mG7pzw/k8y83uGtoYBDXk/U+/ILw916gwQZNDUzm
2qAbGSAIT5+K+/Zra+DmpLup1GFBsJu1rDUiNLBebl6m+sFKOL6nx4FkrIEQ
OjQZcGIV6HoExX4z1cCY5OwVe7iEYWXEmts3zTXwk3S63cIxYci7bfV7va0G
Zt3tpnQHrIb6Fb05K9w0sLL2QndSnQgsr+3t6QvVQF8Tz8ZlP8WgrTt4Kf24
BkrP3X+UjuKQ/VlC3ihCA4tfKh3efkocFNfaBNbHaqAWycHZSmENMAP6RG+e
0sDfCR88wx0kIG1rv+mxAs7zype3XvqzFmwhNES9UANvvTG2LrKVAlmbtZe+
3tTAs+LmSvxlUlASZ/t1XzFHj4Rdv5/4roOe4f4UVrUG6m56U1o3Iw3rsl81
y7zQQJPsziPxBhvB7emv9aLdGniz8RyJ/mgj3P4leYS3VwM9nLdVfNDZBDoO
1uumBzRQ8NRV/okNsuC8qdv76UcNlOr1TI/fuhmu3moVPPJXA+9H6Cz1+snB
xMCEswc3BUUUbBv9a+VAXUiwbO9yCuqdOVesuFIeGv0Ye+mCFHyzz3XhW5E8
fFRvKpKRpCCPZdUYbVEBlB8+NH66g4J/6+JEZRq3QsDUUH6NKgWvqyn5xW7e
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
gmfhX5QRPsyM/JlboAH/A0Ik2TE=
          "]]}, Annotation[#, "Charting`Private`Tag$1387539#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3c8V/8Xx+0VITMtGjRkfobV55xrfYYRGSFJNiFbRmVW4itNkZWmlEr4
VLRUUqmQPQuVGWVk1u/z++fex/Pxft/zPuN1zr1Xye3gLk8eLi4uFc7l//fQ
5oVlXFwkdEspTNOET7SLNmkpz3hIKKnD2OHa8olW1bBa8Cg/CeVVxS5c0aqn
8X3cwfNXhISeWgbVejX1tAs1R2cXZEhIOJ69S+VupD02loiolCdhXltb+E7b
RlpvdcFk9CoSiuY/TaAWNdI2P3vxc06RhPNvR6byHD7THrF5v/3ZRsKXK3d1
tH1sovWQz7mx1UiouWtdeJxmM42nbOOXCE3O+R7p+0wuNNNY90w6pykklO5p
vGHh1ULrunm8YZIgYcDt6GueSm20f1nLno7vJuFCZbC1omgXbaN8jv5dJxI6
KIcFKJ7vojEuqD4K3EvC0FOrRloVu2kZZyzKxtxI2K7Sceos9tDWp566NRJA
wsw5i1ObrL/QTGKlMn8kktD1b4nyuYU+mt/8Fekbx0hI/uPOL+nQT0s/RDrj
lcKJj2csl1LRT2sJs/vvWzoJG0sraaciB2g+AZmJ/VkkfEQsF19a/p2W6rIq
qPcuCb/nr8oVtB+iafzZqtBRSsKN67n8RT4M0ZpO6b1qKiehZS9FOcl0mLb6
haP8u0oSzrzbmCRBjNBKNlx8XvaGhIU3a+bn7MZou6pu+N19R0I+Y25dpb4x
2owtW/rWBxIWZ1++rxL8kwbHWnzyP5NQSi83SuDiOK1+UFryZC8JD2OhgQH/
L1pY/MbKpD5OvJce7kzc/Ysmr0DyPPqNk89zqSqBxb9o+81sHoWNcBhUdZkO
v2m/75zev+8PCXOyHwe+r5mkSYcuLyWJk7HSZ3VE2eIM7eGytc7qK8g4/GW5
sqn/H5rz1e0CW2XIKBDZMNTf/Yd2rdncad0qMqp3pz7f+2aWRtFJ5RFRIePQ
PSqZu2ye5rAkaNNLI6N2VGx65dxf2uJ5uaV2gox3DW+p/Dj5j1agpnKjyZiM
+gcc/uSIcMHQPtOFtywy/m196/HoIhdEVyddKbMn4zmBlUtvX3FDznHuqZRA
Mo4bBxGf9/OB8IcyqV3BZJz+Q9dxqOCDiBU+2gphnPWa44l0UX6wzv0YciuK
jNfYYvejqvhB4MGlX++SyLiusymnSk0QwmYtJc8eJ2OE56kDG08JwtcdPJp7
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
790uGCiHj3HZOi1ihjjmSG7S7i2HBD/XVfUShrjr1my7UVM5DO8Y/fJS1hC3
mFErlz0th6oBXv/i9Zzny3MNiIxycNXSTojWM0T+tPX5MerlkL/krdajb4ge
S5bMwi2c75XanA5ihyGSPZKDX24ohz37BLSF0RC/Si/bMy1XDvZp7f2ZJoa4
Xmb3AXmucjD/ftSk3MoQRTZ30N0+lYFOdp3QhJchKlg0qOj7lYE4j9cpz7Mc
f5R85yvPPIAtS1rZp4cNEf7m9TW8vg/A6CdtYBrh268fVJ0870KkqnCS+2Uj
jBt9Uqd/tBiKXVe4C3Mb46xT8BCv/w3OfCyHCRdjVFTmv85XdgVEHn2sT64w
xoNPF84ZnSqAN9zvf8XJmGBMqpXXmOwluNZv8GZroAkqBcQxn1MvwM8JRrbM
axPcs2JxdYfiGXAvaepMrzFBfk84lSJxBtoOuK4RqjXBWdGBr8ZcZ6D6e2TB
/DsTfJKxKNvbexoyu65f7603wTuf5emX808D1vI9KOri2L8RPOWgdBpO5z9/
v2PKBLdSeRpSt2cAyVJnyXODKd5s1vNT/pQGy/vOz73eaIoWNSJ7F8rT4Ef4
5PQmZVNMNXze3JeTBtm5JT+/bTZFc5611CG/NOAe2/jFU80UOwtCPzQKpsHH
VMmXnrqmuHLJxV3BJBV83g6f8NxpiuWlU+FrP6TAJeNcac8YUxTcnrQ0JnEc
yjz1bvTFmqLd9qRXrvPH4OOxVl3XI6bYunPq9vf+Y8DzVnLfnnhT9KY0Vm5j
HwMfi2NF1sdNsajVqiDL5RiQ7A/SaGdN8UtAduHcvWT44E34yBWb4pZ9Ty9H
uSfBv5PfKt92mGKaXLbM6GI8HEmwFVbrMsWZ6yza35F4WIx6aX+m2xSf/VU/
t7YzHmZ9Lv9y+mKKYiMpV1IexcOE6V6V0W8c+xMStkKR8fCFp/nM8l+meC5x
zcqCqTiojn7layNIx2d3jmhOTR6FJL8rct3adIw7Xvf0on0s3Hsn5KtHpuMu
szR6nX4sdG0NfJxJoeP3Ou1PskqxoD2is3eXLh1dqnfmTIzEQN+Bj4VvaHSU
SLYJL+f832LA3PZSJh1PfGHtiyiLhsWDO42P76PjyLXFWa/NURAavhCkmUrH
2PGJMHvLCOhxK3C4nUZHwWWb9s1RIoBlZYIq6XQ8VaDeWbouAtZvOyW+5jQd
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
AwJqkA0=
          "]]}, Annotation[#, "Charting`Private`Tag$1387539#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {20., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {20., 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{20, 55}, {0., 0.09381111634468581}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"STS", "(", 
         RowBox[{"x", "=", "20"}], ")"}], 
       RowBox[{
         RowBox[{"-", "dN"}], "/", "dt"}], 
       RowBox[{"J", "(", 
         RowBox[{"20", ",", "t"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), Editable -> True, 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.8629375930580993`*^9, 
  3.8629376145147357`*^9}},ExpressionUUID->"374fa97b-b5ea-4e1c-8f78-\
f61b453a229b"]
}, Open  ]],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
9+9ipAma1U5oTmdvhf8BNQCzNQ==
          "]]}, Annotation[#, "Charting`Private`Tag$87082#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVl3k4VO8bxlHZkiyRaFG28i2RGTOW5nmOZcyMJfuWLcpSSNbKvhcSISWV
UlqUsg4hJUq2kKVkKakkJZGE6je/f865PtfM9Z73uZ/7ft5zNrsdtjjAw8XF
tYtz+f89sHdxJRcXCduGQz15+8po5yxTT9bzkFCrcvviebVyWm3Xer6oFSR0
js3MOnq6nLa8YzfPX0ESmjkl7rW3qKCdfRo1vyhBwtA3Pi+Oz1XSHuiLhNRI
kfCu5AZFqgebNtKQP3NchoS01ZdONL1i07bWP/72W5aECxc2z555WkWrZi/7
8Os/Eqa9y114/vQBbZic5cZWIeHDJzoGr01raDzl8m9D1EjI/K/jyu6BGhrr
vsGbnxokVJvqEGcs1tIGbyZ1zRAk/MdX7k/2qqdxKUntKdMnYdfnjf4uvI9o
CtdvtgUYkrB8bkI9w+ERze/K82fTxiS0oMhuHuJ/TPt3fuXDKVsSDu6qcPwX
0UCTl8rTvudAQrGd3pD9toHGOLu92s+JhPRK9RIHgye09DMm5V/dSKgslRWX
LdFI25Jy+vYXXxK+5KcWl3U10QzCxXM+xZFwb0aN/6v657SDCwVrbiSS0Gdj
/Q9jZgst7SjpjMdJEj7/+0sgpLeF1hdkfepDGglFfDI0+eZaaV6+OXHvz5Nw
ol/KS9i+g5biLOM/co+ERyo7OqUyumiqv5SlB0pJeGd1q/Lx8S5az2mtxp4K
Et4YW1H3leimrX9sL9VSQ8JFn7xpncVuWrHcuUflz0j4cVTscO+JHppF7Y2D
91pIeJD3ufOWHz20OSv2mtvtJHQMO2E95tRLg8Q+r8svSRjVeKJ+XqeP1jm+
RjR5hIRHH1rZ10m/ogXFyNfEj5Jw1k7GWuj8K5qUNOlA1AcS+ktXKqpLv6bt
M7KsDvpCwv0R7aWaCgO0H3cz9rn84vTjLlM33mWQtiZQuJS0moyPky2/fWO/
pVWt3Oi4U4yMXebPtz0QeUdzvLaDV1mCjDPcsxutDr2jXe81dtgkw+Fu6Qkh
xVGaBjWFR1CJjEI7Mr7SSt/T7P7wWY7QyLjanzq/8r9PtKXstX9eE2RsCBx6
knLhEy1fRelGjz4ZGYWs92YC47TPLvTF5ywyfqWLqJV8Gacdb4gvKLfh/H5U
NlmzfYKWl8Q9e9KPjPn31hAfhKdoAu3l4hZHyLjnigedK3eKFiLmpS4dRMaV
MW7hI+LfaeYXOwJuHyNje5qg6K3r32m8ZRemW+LJaHAy1uHP62la0LypaGYS
GXcedN56T/kH7d1uHrW9yWRcSFNJHgr/Qatt9vL/cpqM72+7eTUpzNCODJOn
Vl4g47yNjKJt8ixtWO6zcM9Fznpxucpxn2Zpxt55Knn5ZFTkCo+2of+kKc7y
+G0vJOP26fVR/AJztEGBzknjEjKqDvU77yz4RaOTD06cekZGJaq2K3nnIq3s
+AZBmxYyrle0yLK9tUiTfdS5bWM7Gd0jbmSFKCzRFlkU7+JuMlr6Ndo9kvtD
u++6fLxjiIxO8c0JUpr/aBsL2Xw5b8nYyWz/cvDxP1rKl4NKLu/J+Fk01+Le
Zi7wCOnymBonY1Fg5f3ZQi6QSb30YfUsGSX/VW+zreeGE13mK17NkXFXo5uJ
Pz8PzEmuUMj/zennAX7qMwse6LxyaL/qPzLG8ctv0vvCA4ls6nszQQ18F53h
vHz7cvg+2v02Q1YD1WImpsnTvFD1O4DfWE4DGbL0tkpTPogREVflVdTAgT1t
lVV3+UCMZhl1/D8NXLV3mG7pzw/k8y83uGtoYBDXk/U+/ILw916gwQZNDUzm
2qAbGSAIT5+K+/Zra+DmpLup1GFBsJu1rDUiNLBebl6m+sFKOL6nx4FkrIEQ
OjQZcGIV6HoExX4z1cCY5OwVe7iEYWXEmts3zTXwk3S63cIxYci7bfV7va0G
Zt3tpnQHrIb6Fb05K9w0sLL2QndSnQgsr+3t6QvVQF8Tz8ZlP8WgrTt4Kf24
BkrP3X+UjuKQ/VlC3ihCA4tfKh3efkocFNfaBNbHaqAWycHZSmENMAP6RG+e
0sDfCR88wx0kIG1rv+mxAs7zype3XvqzFmwhNES9UANvvTG2LrKVAlmbtZe+
3tTAs+LmSvxlUlASZ/t1XzFHj4Rdv5/4roOe4f4UVrUG6m56U1o3Iw3rsl81
y7zQQJPsziPxBhvB7emv9aLdGniz8RyJ/mgj3P4leYS3VwM9nLdVfNDZBDoO
1uumBzRQ8NRV/okNsuC8qdv76UcNlOr1TI/fuhmu3moVPPJXA+9H6Cz1+snB
xMCEswc3BUUUbBv9a+VAXUiwbO9yCuqdOVesuFIeGv0Ye+mCFHyzz3XhW5E8
fFRvKpKRpCCPZdUYbVEBlB8+NH66g4J/6+JEZRq3QsDUUH6NKgWvqyn5xW7e
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
gmfhX5QRPsyM/JlboAH/A0Ik2TE=
          "]]}, Annotation[#, "Charting`Private`Tag$87082#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {20., 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {20., 0}, 
     BaseStyle -> {FontFamily -> "Arial"}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{20, 55}, {0., 0.09381111634468581}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{"STS", "(", 
         RowBox[{"x", "=", "20"}], ")"}], 
       RowBox[{
         RowBox[{"-", "dN"}], "/", "dt"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], FontFamily -> "Arial", 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), Editable -> True, 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"FontFamily", "\[Rule]", "\"Arial\""}], ",", 
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Input",
 CellChangeTimes->{{3.862315622615679*^9, 
  3.8623156400502377`*^9}},ExpressionUUID->"94b418a3-da0a-44bf-a7f3-\
5afa8b873a20"]
},
WindowSize->{798., 1373.25},
WindowMargins->{{Automatic, -810}, {-307.80000000000007`, Automatic}},
TaggingRules->{
 "WelcomeScreenSettings" -> {"FEStarting" -> False}, "TryRealOnly" -> False},
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (June 9, 2020)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"5d970039-ff84-4d51-ab2b-e06c5b976851"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 7538, 191, 484, "Input",ExpressionUUID->"b2968365-9971-452d-88cc-784c3ee5a422"],
Cell[CellGroupData[{
Cell[8121, 215, 495, 12, 54, "Input",ExpressionUUID->"c421ae4b-841a-417a-ab08-c29db7bae003"],
Cell[8619, 229, 242, 3, 39, "Output",ExpressionUUID->"0364a4ba-7dc5-499d-8967-5c68986b755c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8898, 237, 556, 13, 54, "Input",ExpressionUUID->"b3156717-b955-4204-bab1-c4895617caa7"],
Cell[9457, 252, 5236, 105, 242, "Output",ExpressionUUID->"8d9b2bb0-93f0-4d1f-8de6-ab06a88fbd19"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14730, 362, 652, 15, 54, "Input",ExpressionUUID->"52f4cdfb-a0ac-42bd-916f-21ca5dd827c6"],
Cell[15385, 379, 15147, 298, 72, "Output",ExpressionUUID->"2e404837-fbc1-46a0-a344-1dbc2ba795bd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30569, 682, 871, 21, 94, "Input",ExpressionUUID->"d02b2952-5db6-4fbe-b339-2b834ed254af"],
Cell[31443, 705, 5297, 107, 242, "Output",ExpressionUUID->"e85fec0a-51e4-4ac7-b740-58fde41bb4b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36777, 817, 881, 18, 73, "Input",ExpressionUUID->"16208c2d-0e3c-4e0d-b955-9aaa782f4a56"],
Cell[37661, 837, 419, 6, 39, "Output",ExpressionUUID->"c6fbc6ce-2e91-4d44-9da4-7a160de7ba92"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38117, 848, 887, 20, 75, "Input",ExpressionUUID->"7ee6a778-168d-41a2-8145-225a75d41195"],
Cell[39007, 870, 491, 9, 39, "Output",ExpressionUUID->"8b00c61f-a2ff-4a85-bd89-981a6fd28dc9"]
}, Open  ]],
Cell[39513, 882, 656, 12, 39, "Input",ExpressionUUID->"b77b0084-b49a-45d8-9ab2-e14eadec5aa9"],
Cell[CellGroupData[{
Cell[40194, 898, 634, 13, 54, "Input",ExpressionUUID->"f941ff5b-4949-45ee-ace9-3194240c3bb3"],
Cell[40831, 913, 5569, 110, 241, "Output",ExpressionUUID->"2abdf8bc-4037-44c9-b0b0-1da2e72fe813"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46437, 1028, 1199, 24, 113, "Input",ExpressionUUID->"1e4cd8bb-4274-4eda-9f59-9515bbb97b7e"],
Cell[47639, 1054, 472, 7, 39, "Output",ExpressionUUID->"67c22a5c-58dc-4b8b-9035-d511fe4a08d5"]
}, Open  ]],
Cell[48126, 1064, 1059, 32, 54, "Input",ExpressionUUID->"1baea1c0-466b-4ff7-b519-d86700a87ba5"],
Cell[CellGroupData[{
Cell[49210, 1100, 1319, 26, 111, "Input",ExpressionUUID->"4f32ecbf-983a-4160-8268-61b849749d14"],
Cell[50532, 1128, 28656, 489, 248, "Output",ExpressionUUID->"91637f7c-6d36-4b97-9f1b-ff4a3a5abc50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79225, 1622, 718, 17, 94, "Input",ExpressionUUID->"6ecd1984-f15a-4f5e-b2a2-f3816651b04e"],
Cell[79946, 1641, 193, 2, 39, "Output",ExpressionUUID->"8482d160-d3d4-45a1-9e5e-995060202db6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80176, 1648, 1948, 52, 129, "Input",ExpressionUUID->"15ada212-40c8-41aa-9422-760e2ea85831"],
Cell[82127, 1702, 1332, 38, 99, "Output",ExpressionUUID->"8eebd895-5671-4a76-88fa-3cdb841d7b0c"]
}, Open  ]],
Cell[83474, 1743, 2017, 52, 111, "Input",ExpressionUUID->"62a42bdd-3f1a-431f-8b3c-9de89e543b0c"],
Cell[CellGroupData[{
Cell[85516, 1799, 641, 16, 75, "Input",ExpressionUUID->"5d87c89a-a9cd-4af3-84da-3958d34efe17"],
Cell[86160, 1817, 293, 4, 39, "Output",ExpressionUUID->"a36df895-9af8-48bb-b18e-5b109051ecd5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86490, 1826, 571, 12, 54, "Input",ExpressionUUID->"6624fad8-ff20-479a-b8ee-b624546693b1"],
Cell[87064, 1840, 51157, 858, 249, "Output",ExpressionUUID->"7e1bda06-fb1f-441a-bb8a-3b948a5df473"]
}, Open  ]],
Cell[138236, 2701, 2128, 45, 113, "Input",ExpressionUUID->"32a5f021-0a37-470d-a692-c100ca8b2ce7"],
Cell[CellGroupData[{
Cell[140389, 2750, 697, 15, 75, "Input",ExpressionUUID->"3b8282c5-1f6c-4821-99d2-7f7f271c3e49"],
Cell[141089, 2767, 345, 4, 39, "Output",ExpressionUUID->"904b7c85-b308-4e9c-8c9a-d8011d67a521"]
}, Open  ]],
Cell[CellGroupData[{
Cell[141471, 2776, 1091, 22, 113, "Input",ExpressionUUID->"dc120e2e-571e-4226-b71e-6f1e5911a04c"],
Cell[142565, 2800, 193, 2, 39, "Output",ExpressionUUID->"446175ff-1a33-42fd-a2c0-9fc4ce922c85"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142795, 2807, 2232, 42, 113, "Input",ExpressionUUID->"bbef91f4-3b23-43e0-9439-97bb03b45f6a"],
Cell[145030, 2851, 13354, 235, 247, "Output",ExpressionUUID->"02ad61f5-662a-4e4e-98d7-eddfe82b4c38"]
}, Open  ]],
Cell[158399, 3089, 6516, 168, 432, "Input",ExpressionUUID->"2fbcf0fb-6b39-454c-8024-305be6c0c762"],
Cell[CellGroupData[{
Cell[164940, 3261, 461, 10, 54, "Input",ExpressionUUID->"b4eebda1-c872-414f-b5de-ffa82dc6de69"],
Cell[165404, 3273, 174, 2, 39, "Output",ExpressionUUID->"ecc58b1c-9952-4e16-94aa-48c43e01beca"]
}, Open  ]],
Cell[165593, 3278, 682, 13, 39, "Input",ExpressionUUID->"bddc84f0-7209-41a2-872f-80034e3e79e4"],
Cell[CellGroupData[{
Cell[166300, 3295, 469, 12, 54, "Input",ExpressionUUID->"fd9d8341-533b-4af4-9fe6-6ef24bfa61eb"],
Cell[166772, 3309, 295, 6, 39, "Output",ExpressionUUID->"95c31a93-1847-414e-9e56-b23984486ba1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167104, 3320, 499, 13, 54, "Input",ExpressionUUID->"528ba2d9-abee-41bc-966f-2de38500d80f"],
Cell[167606, 3335, 14789, 295, 72, "Output",ExpressionUUID->"3f851443-3fc3-42c2-9cdb-0e89971ba9e5"]
}, Open  ]],
Cell[182410, 3633, 1746, 36, 127, "Input",ExpressionUUID->"ee447023-0a39-4f64-a5f1-92c742dfd199"],
Cell[184159, 3671, 58942, 1046, 250, InheritFromParent,ExpressionUUID->"6fe51c00-58f6-4445-ab54-5488c7f0a063"],
Cell[243104, 4719, 41075, 738, 250, "Input",ExpressionUUID->"83d7dc36-4528-49eb-b01a-a987cf3fc1b7"],
Cell[284182, 5459, 7338, 188, 447, "Input",ExpressionUUID->"99dc6471-5202-4581-b258-35e624d7eae1"],
Cell[CellGroupData[{
Cell[291545, 5651, 517, 13, 54, "Input",ExpressionUUID->"feea0a14-4dfa-4be6-8817-7bd1077d626c"],
Cell[292065, 5666, 14655, 291, 72, "Output",ExpressionUUID->"4dcd19d8-bf5c-42b4-9c49-f56215c6f9dd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[306757, 5962, 466, 12, 54, "Input",ExpressionUUID->"2bf587c8-0167-4c64-8e06-d2f35e3c7376"],
Cell[307226, 5976, 268, 5, 39, "Output",ExpressionUUID->"c377a6ab-b708-4a2c-a51d-95034593fa55"]
}, Open  ]],
Cell[307509, 5984, 6149, 161, 393, "Input",ExpressionUUID->"2cddb378-2867-45c5-a5c6-e36207d27dc2"],
Cell[CellGroupData[{
Cell[313683, 6149, 450, 9, 54, "Input",ExpressionUUID->"6d805a56-da61-4b0c-a61a-1ecb1d2b402f"],
Cell[314136, 6160, 219, 3, 39, "Output",ExpressionUUID->"947138c2-ec8d-4934-aa13-7fb5c4d40d04"]
}, Open  ]],
Cell[314370, 6166, 343, 8, 39, "Input",ExpressionUUID->"94b89137-184b-4047-aa4c-34c5461bf4a7"],
Cell[CellGroupData[{
Cell[314738, 6178, 444, 12, 54, "Input",ExpressionUUID->"872ddb19-70a2-4eb1-94da-be2ae57dc1c6"],
Cell[315185, 6192, 244, 5, 39, "Output",ExpressionUUID->"066b1d97-0bce-4ff1-afac-230e694c964c"]
}, Open  ]],
Cell[315444, 6200, 799, 19, 90, "Input",ExpressionUUID->"ae8fb1f5-5560-4f05-b8cd-9b3c8d0b1f09"],
Cell[316246, 6221, 58712, 1042, 244, InheritFromParent,ExpressionUUID->"6c22ee77-f53f-4ada-aa4a-d9103ecfe0b8"],
Cell[374961, 7265, 40598, 730, 244, "Input",ExpressionUUID->"17041662-fa50-411f-98a7-3111d71b5345"],
Cell[415562, 7997, 7204, 187, 447, "Input",ExpressionUUID->"edc4735f-84a4-47c4-ab31-e7fbaf5e1566"],
Cell[CellGroupData[{
Cell[422791, 8188, 465, 12, 54, "Input",ExpressionUUID->"a0c95435-b4ea-440f-8be5-770c24cfcd55"],
Cell[423259, 8202, 14634, 290, 72, "Output",ExpressionUUID->"ef42b3a7-0c83-4830-8235-4ed0d3e5cc6e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437930, 8497, 466, 12, 54, "Input",ExpressionUUID->"e3a19485-42c5-4ddf-a022-afe5b2c2782f"],
Cell[438399, 8511, 243, 5, 39, "Output",ExpressionUUID->"91177b57-51fa-4d46-a819-b7f882e1adf0"]
}, Open  ]],
Cell[438657, 8519, 6096, 160, 393, "Input",ExpressionUUID->"e48d0d54-1c8a-45cf-bd2f-4c39d01c9e93"],
Cell[444756, 8681, 379, 8, 54, "Input",ExpressionUUID->"0496d1b8-ae16-4545-b7b0-713974334dfa"],
Cell[445138, 8691, 341, 8, 39, "Input",ExpressionUUID->"aad3cb81-e509-4e74-bcfe-164a7ae6fe50"],
Cell[CellGroupData[{
Cell[445504, 8703, 470, 12, 54, "Input",ExpressionUUID->"44ca4668-f6c4-43aa-90fd-e59940c65c79"],
Cell[445977, 8717, 265, 5, 39, "Output",ExpressionUUID->"477a1ca9-68d8-410e-b205-a9d6a8ec407b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[446279, 8727, 919, 20, 90, "Input",ExpressionUUID->"e00d7e1f-41ef-4022-a565-40d59e2fca52"],
Cell[447201, 8749, 51458, 923, 244, InheritFromParent,ExpressionUUID->"374fa97b-b5ea-4e1c-8f78-f61b453a229b"]
}, Open  ]],
Cell[498674, 9675, 35996, 653, 244, "Input",ExpressionUUID->"94b418a3-da0a-44bf-a7f3-5afa8b873a20"]
}
]
*)

